"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdatenew_reddit"]("main",{

/***/ "./src/shared/CardsList/Card/CardModal/ModalCommentsForm/MenuFormButtonControls/MenuFormBtnsDropdown/menuFormBtnsDropdown.css":
/*!************************************************************************************************************************************!*\
  !*** ./src/shared/CardsList/Card/CardModal/ModalCommentsForm/MenuFormButtonControls/MenuFormBtnsDropdown/menuFormBtnsDropdown.css ***!
  \************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n// extracted by mini-css-extract-plugin\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\"list\":\"menuFormBtnsDropdown__list--g3meG\",\"flash\":\"menuFormBtnsDropdown__flash--Zep0j\"});\n    if(true) {\n      // 1708813881387\n      var cssReload = __webpack_require__(/*! ../../../../../../../../node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js */ \"./node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js\")(module.id, {\"locals\":true});\n      module.hot.dispose(cssReload);\n      \n    }\n  \n\n//# sourceURL=webpack://new-reddit/./src/shared/CardsList/Card/CardModal/ModalCommentsForm/MenuFormButtonControls/MenuFormBtnsDropdown/menuFormBtnsDropdown.css?");

/***/ }),

/***/ "./src/shared/CardsList/Card/CardModal/ModalCommentsForm/modalCommentsForm.css":
/*!*************************************************************************************!*\
  !*** ./src/shared/CardsList/Card/CardModal/ModalCommentsForm/modalCommentsForm.css ***!
  \*************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n// extracted by mini-css-extract-plugin\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\"form\":\"modalCommentsForm__form--IQmmh\",\"formOpen\":\"modalCommentsForm__formOpen--bywC5\",\"textarea\":\"modalCommentsForm__textarea--Lj9Eu\",\"label\":\"modalCommentsForm__label--l9onr\",\"buttonsWrapper\":\"modalCommentsForm__buttonsWrapper--ErgAy\",\"item\":\"modalCommentsForm__item--fvMcV\",\"submitButton\":\"modalCommentsForm__submitButton--KXHzQ\",\"cancelBtn\":\"modalCommentsForm__cancelBtn--jTjZl\",\"btnSizeMobile\":\"modalCommentsForm__btnSizeMobile--HYQgh\"});\n    if(true) {\n      // 1708813869840\n      var cssReload = __webpack_require__(/*! ../../../../../../node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js */ \"./node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js\")(module.id, {\"locals\":true});\n      module.hot.dispose(cssReload);\n      \n    }\n  \n\n//# sourceURL=webpack://new-reddit/./src/shared/CardsList/Card/CardModal/ModalCommentsForm/modalCommentsForm.css?");

/***/ }),

/***/ "./src/shared/CardsList/Card/CardModal/ModalCommentsList/Comment/MenuCommentButton/MenuCommentDropdown/menuCommentDropdown.css":
/*!*************************************************************************************************************************************!*\
  !*** ./src/shared/CardsList/Card/CardModal/ModalCommentsList/Comment/MenuCommentButton/MenuCommentDropdown/menuCommentDropdown.css ***!
  \*************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n// extracted by mini-css-extract-plugin\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\"list\":\"menuCommentDropdown__list--QVwrF\",\"flash\":\"menuCommentDropdown__flash--RDVIG\",\"item\":\"menuCommentDropdown__item--qt7FG\"});\n    if(true) {\n      // 1708813883735\n      var cssReload = __webpack_require__(/*! ../../../../../../../../../node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js */ \"./node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js\")(module.id, {\"locals\":true});\n      module.hot.dispose(cssReload);\n      \n    }\n  \n\n//# sourceURL=webpack://new-reddit/./src/shared/CardsList/Card/CardModal/ModalCommentsList/Comment/MenuCommentButton/MenuCommentDropdown/menuCommentDropdown.css?");

/***/ }),

/***/ "./src/shared/CardsList/Card/CardModal/ModalCommentsList/Comment/MenuCommentButton/menuCommentButton.css":
/*!***************************************************************************************************************!*\
  !*** ./src/shared/CardsList/Card/CardModal/ModalCommentsList/Comment/MenuCommentButton/menuCommentButton.css ***!
  \***************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n// extracted by mini-css-extract-plugin\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\"button\":\"menuCommentButton__button--pGqHm\"});\n    if(true) {\n      // 1708813881390\n      var cssReload = __webpack_require__(/*! ../../../../../../../../node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js */ \"./node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js\")(module.id, {\"locals\":true});\n      module.hot.dispose(cssReload);\n      \n    }\n  \n\n//# sourceURL=webpack://new-reddit/./src/shared/CardsList/Card/CardModal/ModalCommentsList/Comment/MenuCommentButton/menuCommentButton.css?");

/***/ }),

/***/ "./src/shared/CardsList/Card/CardModal/ModalCommentsList/Comment/comment.css":
/*!***********************************************************************************!*\
  !*** ./src/shared/CardsList/Card/CardModal/ModalCommentsList/Comment/comment.css ***!
  \***********************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n// extracted by mini-css-extract-plugin\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\"container\":\"comment__container--TLUYE\",\"header\":\"comment__header--tqj8W\",\"body\":\"comment__body--sotBq\",\"content\":\"comment__content--GJfEW\",\"commentOpen\":\"comment__commentOpen--s9TuF\",\"buttonOpen\":\"comment__buttonOpen--o8VhN\",\"buttonLine\":\"comment__buttonLine--mVe0E\",\"userLinkAvatar\":\"comment__userLinkAvatar--qt1H0\",\"styleAvatar\":\"comment__styleAvatar--ulVcl\",\"createdAd\":\"comment__createdAd--_kGGW\",\"text\":\"comment__text--wigUO\",\"controlPanel\":\"comment__controlPanel--yuo9m\",\"karmaCounter\":\"comment__karmaCounter--Lgg37\",\"button\":\"comment__button--VqfAQ\",\"commentsBlock\":\"comment__commentsBlock--K9Amn\",\"formComment\":\"comment__formComment--MaS2J\"});\n    if(true) {\n      // 1708813879083\n      var cssReload = __webpack_require__(/*! ../../../../../../../node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js */ \"./node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js\")(module.id, {\"locals\":true});\n      module.hot.dispose(cssReload);\n      \n    }\n  \n\n//# sourceURL=webpack://new-reddit/./src/shared/CardsList/Card/CardModal/ModalCommentsList/Comment/comment.css?");

/***/ }),

/***/ "./src/shared/CardsList/Card/CardModal/ModalCommentsList/modalcommentsList.css":
/*!*************************************************************************************!*\
  !*** ./src/shared/CardsList/Card/CardModal/ModalCommentsList/modalcommentsList.css ***!
  \*************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n// extracted by mini-css-extract-plugin\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\"list\":\"modalcommentsList__list--VizIY\",\"loader\":\"modalcommentsList__loader--qQX2b\"});\n    if(true) {\n      // 1708813869847\n      var cssReload = __webpack_require__(/*! ../../../../../../node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js */ \"./node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js\")(module.id, {\"locals\":true});\n      module.hot.dispose(cssReload);\n      \n    }\n  \n\n//# sourceURL=webpack://new-reddit/./src/shared/CardsList/Card/CardModal/ModalCommentsList/modalcommentsList.css?");

/***/ }),

/***/ "./src/shared/CardsList/Card/CardModal/ModalControlPanel/modalControlPanel.css":
/*!*************************************************************************************!*\
  !*** ./src/shared/CardsList/Card/CardModal/ModalControlPanel/modalControlPanel.css ***!
  \*************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n// extracted by mini-css-extract-plugin\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\"panel\":\"modalControlPanel__panel--EazPe\",\"item\":\"modalControlPanel__item--tt0JH\"});\n    if(true) {\n      // 1708813869843\n      var cssReload = __webpack_require__(/*! ../../../../../../node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js */ \"./node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js\")(module.id, {\"locals\":true});\n      module.hot.dispose(cssReload);\n      \n    }\n  \n\n//# sourceURL=webpack://new-reddit/./src/shared/CardsList/Card/CardModal/ModalControlPanel/modalControlPanel.css?");

/***/ }),

/***/ "./src/shared/CardsList/Card/CardModal/ModalSortBlock/modalSortBlock.css":
/*!*******************************************************************************!*\
  !*** ./src/shared/CardsList/Card/CardModal/ModalSortBlock/modalSortBlock.css ***!
  \*******************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n// extracted by mini-css-extract-plugin\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\"sortblock\":\"modalSortBlock__sortblock--Mb7DF\",\"button\":\"modalSortBlock__button--Xz9S3\"});\n    if(true) {\n      // 1708813869640\n      var cssReload = __webpack_require__(/*! ../../../../../../node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js */ \"./node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js\")(module.id, {\"locals\":true});\n      module.hot.dispose(cssReload);\n      \n    }\n  \n\n//# sourceURL=webpack://new-reddit/./src/shared/CardsList/Card/CardModal/ModalSortBlock/modalSortBlock.css?");

/***/ }),

/***/ "./src/shared/CardsList/Card/CardModal/MoreCommentsButton/moreCommentsButton.css":
/*!***************************************************************************************!*\
  !*** ./src/shared/CardsList/Card/CardModal/MoreCommentsButton/moreCommentsButton.css ***!
  \***************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n// extracted by mini-css-extract-plugin\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\"button\":\"moreCommentsButton__button--wPPg3\"});\n    if(true) {\n      // 1708813871816\n      var cssReload = __webpack_require__(/*! ../../../../../../node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js */ \"./node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js\")(module.id, {\"locals\":true});\n      module.hot.dispose(cssReload);\n      \n    }\n  \n\n//# sourceURL=webpack://new-reddit/./src/shared/CardsList/Card/CardModal/MoreCommentsButton/moreCommentsButton.css?");

/***/ }),

/***/ "./src/shared/CardsList/Card/CardModal/cardmodal.css":
/*!***********************************************************!*\
  !*** ./src/shared/CardsList/Card/CardModal/cardmodal.css ***!
  \***********************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n// extracted by mini-css-extract-plugin\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\"modal\":\"cardmodal__modal--_aIAj\",\"slidein\":\"cardmodal__slidein--KjT0W\",\"container\":\"cardmodal__container--kROWd\",\"loader\":\"cardmodal__loader--LFCdA\",\"buttonBackToTop\":\"cardmodal__buttonBackToTop--GCtUg\",\"buttonCloserX\":\"cardmodal__buttonCloserX--uM7LU\",\"header\":\"cardmodal__header--HvEDM\",\"popupMediaUser\":\"cardmodal__popupMediaUser--mANxE\",\"karmaCounter\":\"cardmodal__karmaCounter--NEENl\",\"preview\":\"cardmodal__preview--cVARZ\",\"textContent\":\"cardmodal__textContent--CbJ62\",\"footer\":\"cardmodal__footer--aOopQ\",\"commentsBlock\":\"cardmodal__commentsBlock--sWbJp\",\"popupHeaderWrapper\":\"cardmodal__popupHeaderWrapper--qj_I3\"});\n    if(true) {\n      // 1708813859201\n      var cssReload = __webpack_require__(/*! ../../../../../node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js */ \"./node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js\")(module.id, {\"locals\":true});\n      module.hot.dispose(cssReload);\n      \n    }\n  \n\n//# sourceURL=webpack://new-reddit/./src/shared/CardsList/Card/CardModal/cardmodal.css?");

/***/ }),

/***/ "./node_modules/dompurify/dist/purify.js":
/*!***********************************************!*\
  !*** ./node_modules/dompurify/dist/purify.js ***!
  \***********************************************/
/***/ (function(module) {

eval("\n/*! @license DOMPurify 3.0.8 | (c) Cure53 and other contributors | Released under the Apache license 2.0 and Mozilla Public License 2.0 | github.com/cure53/DOMPurify/blob/3.0.8/LICENSE */\n(function (global, factory) {\n     true ? module.exports = factory() :\n        0;\n})(this, (function () {\n    'use strict';\n    const { entries, setPrototypeOf, isFrozen, getPrototypeOf, getOwnPropertyDescriptor } = Object;\n    let { freeze, seal, create } = Object; // eslint-disable-line import/no-mutable-exports\n    let { apply, construct } = typeof Reflect !== 'undefined' && Reflect;\n    if (!freeze) {\n        freeze = function freeze(x) {\n            return x;\n        };\n    }\n    if (!seal) {\n        seal = function seal(x) {\n            return x;\n        };\n    }\n    if (!apply) {\n        apply = function apply(fun, thisValue, args) {\n            return fun.apply(thisValue, args);\n        };\n    }\n    if (!construct) {\n        construct = function construct(Func, args) {\n            return new Func(...args);\n        };\n    }\n    const arrayForEach = unapply(Array.prototype.forEach);\n    const arrayPop = unapply(Array.prototype.pop);\n    const arrayPush = unapply(Array.prototype.push);\n    const stringToLowerCase = unapply(String.prototype.toLowerCase);\n    const stringToString = unapply(String.prototype.toString);\n    const stringMatch = unapply(String.prototype.match);\n    const stringReplace = unapply(String.prototype.replace);\n    const stringIndexOf = unapply(String.prototype.indexOf);\n    const stringTrim = unapply(String.prototype.trim);\n    const regExpTest = unapply(RegExp.prototype.test);\n    const typeErrorCreate = unconstruct(TypeError);\n    /**\n     * Creates a new function that calls the given function with a specified thisArg and arguments.\n     *\n     * @param {Function} func - The function to be wrapped and called.\n     * @returns {Function} A new function that calls the given function with a specified thisArg and arguments.\n     */\n    function unapply(func) {\n        return function (thisArg) {\n            for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n                args[_key - 1] = arguments[_key];\n            }\n            return apply(func, thisArg, args);\n        };\n    }\n    /**\n     * Creates a new function that constructs an instance of the given constructor function with the provided arguments.\n     *\n     * @param {Function} func - The constructor function to be wrapped and called.\n     * @returns {Function} A new function that constructs an instance of the given constructor function with the provided arguments.\n     */\n    function unconstruct(func) {\n        return function () {\n            for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n                args[_key2] = arguments[_key2];\n            }\n            return construct(func, args);\n        };\n    }\n    /**\n     * Add properties to a lookup table\n     *\n     * @param {Object} set - The set to which elements will be added.\n     * @param {Array} array - The array containing elements to be added to the set.\n     * @param {Function} transformCaseFunc - An optional function to transform the case of each element before adding to the set.\n     * @returns {Object} The modified set with added elements.\n     */\n    function addToSet(set, array) {\n        let transformCaseFunc = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : stringToLowerCase;\n        if (setPrototypeOf) {\n            // Make 'in' and truthy checks like Boolean(set.constructor)\n            // independent of any properties defined on Object.prototype.\n            // Prevent prototype setters from intercepting set as a this value.\n            setPrototypeOf(set, null);\n        }\n        let l = array.length;\n        while (l--) {\n            let element = array[l];\n            if (typeof element === 'string') {\n                const lcElement = transformCaseFunc(element);\n                if (lcElement !== element) {\n                    // Config presets (e.g. tags.js, attrs.js) are immutable.\n                    if (!isFrozen(array)) {\n                        array[l] = lcElement;\n                    }\n                    element = lcElement;\n                }\n            }\n            set[element] = true;\n        }\n        return set;\n    }\n    /**\n     * Clean up an array to harden against CSPP\n     *\n     * @param {Array} array - The array to be cleaned.\n     * @returns {Array} The cleaned version of the array\n     */\n    function cleanArray(array) {\n        for (let index = 0; index < array.length; index++) {\n            if (getOwnPropertyDescriptor(array, index) === undefined) {\n                array[index] = null;\n            }\n        }\n        return array;\n    }\n    /**\n     * Shallow clone an object\n     *\n     * @param {Object} object - The object to be cloned.\n     * @returns {Object} A new object that copies the original.\n     */\n    function clone(object) {\n        const newObject = create(null);\n        for (const [property, value] of entries(object)) {\n            if (getOwnPropertyDescriptor(object, property) !== undefined) {\n                if (Array.isArray(value)) {\n                    newObject[property] = cleanArray(value);\n                }\n                else if (value && typeof value === 'object' && value.constructor === Object) {\n                    newObject[property] = clone(value);\n                }\n                else {\n                    newObject[property] = value;\n                }\n            }\n        }\n        return newObject;\n    }\n    /**\n     * This method automatically checks if the prop is function or getter and behaves accordingly.\n     *\n     * @param {Object} object - The object to look up the getter function in its prototype chain.\n     * @param {String} prop - The property name for which to find the getter function.\n     * @returns {Function} The getter function found in the prototype chain or a fallback function.\n     */\n    function lookupGetter(object, prop) {\n        while (object !== null) {\n            const desc = getOwnPropertyDescriptor(object, prop);\n            if (desc) {\n                if (desc.get) {\n                    return unapply(desc.get);\n                }\n                if (typeof desc.value === 'function') {\n                    return unapply(desc.value);\n                }\n            }\n            object = getPrototypeOf(object);\n        }\n        function fallbackValue(element) {\n            console.warn('fallback value for', element);\n            return null;\n        }\n        return fallbackValue;\n    }\n    const html$1 = freeze(['a', 'abbr', 'acronym', 'address', 'area', 'article', 'aside', 'audio', 'b', 'bdi', 'bdo', 'big', 'blink', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption', 'center', 'cite', 'code', 'col', 'colgroup', 'content', 'data', 'datalist', 'dd', 'decorator', 'del', 'details', 'dfn', 'dialog', 'dir', 'div', 'dl', 'dt', 'element', 'em', 'fieldset', 'figcaption', 'figure', 'font', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'i', 'img', 'input', 'ins', 'kbd', 'label', 'legend', 'li', 'main', 'map', 'mark', 'marquee', 'menu', 'menuitem', 'meter', 'nav', 'nobr', 'ol', 'optgroup', 'option', 'output', 'p', 'picture', 'pre', 'progress', 'q', 'rp', 'rt', 'ruby', 's', 'samp', 'section', 'select', 'shadow', 'small', 'source', 'spacer', 'span', 'strike', 'strong', 'style', 'sub', 'summary', 'sup', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'time', 'tr', 'track', 'tt', 'u', 'ul', 'var', 'video', 'wbr']);\n    // SVG\n    const svg$1 = freeze(['svg', 'a', 'altglyph', 'altglyphdef', 'altglyphitem', 'animatecolor', 'animatemotion', 'animatetransform', 'circle', 'clippath', 'defs', 'desc', 'ellipse', 'filter', 'font', 'g', 'glyph', 'glyphref', 'hkern', 'image', 'line', 'lineargradient', 'marker', 'mask', 'metadata', 'mpath', 'path', 'pattern', 'polygon', 'polyline', 'radialgradient', 'rect', 'stop', 'style', 'switch', 'symbol', 'text', 'textpath', 'title', 'tref', 'tspan', 'view', 'vkern']);\n    const svgFilters = freeze(['feBlend', 'feColorMatrix', 'feComponentTransfer', 'feComposite', 'feConvolveMatrix', 'feDiffuseLighting', 'feDisplacementMap', 'feDistantLight', 'feDropShadow', 'feFlood', 'feFuncA', 'feFuncB', 'feFuncG', 'feFuncR', 'feGaussianBlur', 'feImage', 'feMerge', 'feMergeNode', 'feMorphology', 'feOffset', 'fePointLight', 'feSpecularLighting', 'feSpotLight', 'feTile', 'feTurbulence']);\n    // List of SVG elements that are disallowed by default.\n    // We still need to know them so that we can do namespace\n    // checks properly in case one wants to add them to\n    // allow-list.\n    const svgDisallowed = freeze(['animate', 'color-profile', 'cursor', 'discard', 'font-face', 'font-face-format', 'font-face-name', 'font-face-src', 'font-face-uri', 'foreignobject', 'hatch', 'hatchpath', 'mesh', 'meshgradient', 'meshpatch', 'meshrow', 'missing-glyph', 'script', 'set', 'solidcolor', 'unknown', 'use']);\n    const mathMl$1 = freeze(['math', 'menclose', 'merror', 'mfenced', 'mfrac', 'mglyph', 'mi', 'mlabeledtr', 'mmultiscripts', 'mn', 'mo', 'mover', 'mpadded', 'mphantom', 'mroot', 'mrow', 'ms', 'mspace', 'msqrt', 'mstyle', 'msub', 'msup', 'msubsup', 'mtable', 'mtd', 'mtext', 'mtr', 'munder', 'munderover', 'mprescripts']);\n    // Similarly to SVG, we want to know all MathML elements,\n    // even those that we disallow by default.\n    const mathMlDisallowed = freeze(['maction', 'maligngroup', 'malignmark', 'mlongdiv', 'mscarries', 'mscarry', 'msgroup', 'mstack', 'msline', 'msrow', 'semantics', 'annotation', 'annotation-xml', 'mprescripts', 'none']);\n    const text = freeze(['#text']);\n    const html = freeze(['accept', 'action', 'align', 'alt', 'autocapitalize', 'autocomplete', 'autopictureinpicture', 'autoplay', 'background', 'bgcolor', 'border', 'capture', 'cellpadding', 'cellspacing', 'checked', 'cite', 'class', 'clear', 'color', 'cols', 'colspan', 'controls', 'controlslist', 'coords', 'crossorigin', 'datetime', 'decoding', 'default', 'dir', 'disabled', 'disablepictureinpicture', 'disableremoteplayback', 'download', 'draggable', 'enctype', 'enterkeyhint', 'face', 'for', 'headers', 'height', 'hidden', 'high', 'href', 'hreflang', 'id', 'inputmode', 'integrity', 'ismap', 'kind', 'label', 'lang', 'list', 'loading', 'loop', 'low', 'max', 'maxlength', 'media', 'method', 'min', 'minlength', 'multiple', 'muted', 'name', 'nonce', 'noshade', 'novalidate', 'nowrap', 'open', 'optimum', 'pattern', 'placeholder', 'playsinline', 'poster', 'preload', 'pubdate', 'radiogroup', 'readonly', 'rel', 'required', 'rev', 'reversed', 'role', 'rows', 'rowspan', 'spellcheck', 'scope', 'selected', 'shape', 'size', 'sizes', 'span', 'srclang', 'start', 'src', 'srcset', 'step', 'style', 'summary', 'tabindex', 'title', 'translate', 'type', 'usemap', 'valign', 'value', 'width', 'xmlns', 'slot']);\n    const svg = freeze(['accent-height', 'accumulate', 'additive', 'alignment-baseline', 'ascent', 'attributename', 'attributetype', 'azimuth', 'basefrequency', 'baseline-shift', 'begin', 'bias', 'by', 'class', 'clip', 'clippathunits', 'clip-path', 'clip-rule', 'color', 'color-interpolation', 'color-interpolation-filters', 'color-profile', 'color-rendering', 'cx', 'cy', 'd', 'dx', 'dy', 'diffuseconstant', 'direction', 'display', 'divisor', 'dur', 'edgemode', 'elevation', 'end', 'fill', 'fill-opacity', 'fill-rule', 'filter', 'filterunits', 'flood-color', 'flood-opacity', 'font-family', 'font-size', 'font-size-adjust', 'font-stretch', 'font-style', 'font-variant', 'font-weight', 'fx', 'fy', 'g1', 'g2', 'glyph-name', 'glyphref', 'gradientunits', 'gradienttransform', 'height', 'href', 'id', 'image-rendering', 'in', 'in2', 'k', 'k1', 'k2', 'k3', 'k4', 'kerning', 'keypoints', 'keysplines', 'keytimes', 'lang', 'lengthadjust', 'letter-spacing', 'kernelmatrix', 'kernelunitlength', 'lighting-color', 'local', 'marker-end', 'marker-mid', 'marker-start', 'markerheight', 'markerunits', 'markerwidth', 'maskcontentunits', 'maskunits', 'max', 'mask', 'media', 'method', 'mode', 'min', 'name', 'numoctaves', 'offset', 'operator', 'opacity', 'order', 'orient', 'orientation', 'origin', 'overflow', 'paint-order', 'path', 'pathlength', 'patterncontentunits', 'patterntransform', 'patternunits', 'points', 'preservealpha', 'preserveaspectratio', 'primitiveunits', 'r', 'rx', 'ry', 'radius', 'refx', 'refy', 'repeatcount', 'repeatdur', 'restart', 'result', 'rotate', 'scale', 'seed', 'shape-rendering', 'specularconstant', 'specularexponent', 'spreadmethod', 'startoffset', 'stddeviation', 'stitchtiles', 'stop-color', 'stop-opacity', 'stroke-dasharray', 'stroke-dashoffset', 'stroke-linecap', 'stroke-linejoin', 'stroke-miterlimit', 'stroke-opacity', 'stroke', 'stroke-width', 'style', 'surfacescale', 'systemlanguage', 'tabindex', 'targetx', 'targety', 'transform', 'transform-origin', 'text-anchor', 'text-decoration', 'text-rendering', 'textlength', 'type', 'u1', 'u2', 'unicode', 'values', 'viewbox', 'visibility', 'version', 'vert-adv-y', 'vert-origin-x', 'vert-origin-y', 'width', 'word-spacing', 'wrap', 'writing-mode', 'xchannelselector', 'ychannelselector', 'x', 'x1', 'x2', 'xmlns', 'y', 'y1', 'y2', 'z', 'zoomandpan']);\n    const mathMl = freeze(['accent', 'accentunder', 'align', 'bevelled', 'close', 'columnsalign', 'columnlines', 'columnspan', 'denomalign', 'depth', 'dir', 'display', 'displaystyle', 'encoding', 'fence', 'frame', 'height', 'href', 'id', 'largeop', 'length', 'linethickness', 'lspace', 'lquote', 'mathbackground', 'mathcolor', 'mathsize', 'mathvariant', 'maxsize', 'minsize', 'movablelimits', 'notation', 'numalign', 'open', 'rowalign', 'rowlines', 'rowspacing', 'rowspan', 'rspace', 'rquote', 'scriptlevel', 'scriptminsize', 'scriptsizemultiplier', 'selection', 'separator', 'separators', 'stretchy', 'subscriptshift', 'supscriptshift', 'symmetric', 'voffset', 'width', 'xmlns']);\n    const xml = freeze(['xlink:href', 'xml:id', 'xlink:title', 'xml:space', 'xmlns:xlink']);\n    // eslint-disable-next-line unicorn/better-regex\n    const MUSTACHE_EXPR = seal(/\\{\\{[\\w\\W]*|[\\w\\W]*\\}\\}/gm); // Specify template detection regex for SAFE_FOR_TEMPLATES mode\n    const ERB_EXPR = seal(/<%[\\w\\W]*|[\\w\\W]*%>/gm);\n    const TMPLIT_EXPR = seal(/\\${[\\w\\W]*}/gm);\n    const DATA_ATTR = seal(/^data-[\\-\\w.\\u00B7-\\uFFFF]/); // eslint-disable-line no-useless-escape\n    const ARIA_ATTR = seal(/^aria-[\\-\\w]+$/); // eslint-disable-line no-useless-escape\n    const IS_ALLOWED_URI = seal(/^(?:(?:(?:f|ht)tps?|mailto|tel|callto|sms|cid|xmpp):|[^a-z]|[a-z+.\\-]+(?:[^a-z+.\\-:]|$))/i // eslint-disable-line no-useless-escape\n    );\n    const IS_SCRIPT_OR_DATA = seal(/^(?:\\w+script|data):/i);\n    const ATTR_WHITESPACE = seal(/[\\u0000-\\u0020\\u00A0\\u1680\\u180E\\u2000-\\u2029\\u205F\\u3000]/g // eslint-disable-line no-control-regex\n    );\n    const DOCTYPE_NAME = seal(/^html$/i);\n    var EXPRESSIONS = /*#__PURE__*/ Object.freeze({\n        __proto__: null,\n        MUSTACHE_EXPR: MUSTACHE_EXPR,\n        ERB_EXPR: ERB_EXPR,\n        TMPLIT_EXPR: TMPLIT_EXPR,\n        DATA_ATTR: DATA_ATTR,\n        ARIA_ATTR: ARIA_ATTR,\n        IS_ALLOWED_URI: IS_ALLOWED_URI,\n        IS_SCRIPT_OR_DATA: IS_SCRIPT_OR_DATA,\n        ATTR_WHITESPACE: ATTR_WHITESPACE,\n        DOCTYPE_NAME: DOCTYPE_NAME\n    });\n    const getGlobal = function getGlobal() {\n        return typeof window === 'undefined' ? null : window;\n    };\n    /**\n     * Creates a no-op policy for internal use only.\n     * Don't export this function outside this module!\n     * @param {TrustedTypePolicyFactory} trustedTypes The policy factory.\n     * @param {HTMLScriptElement} purifyHostElement The Script element used to load DOMPurify (to determine policy name suffix).\n     * @return {TrustedTypePolicy} The policy created (or null, if Trusted Types\n     * are not supported or creating the policy failed).\n     */\n    const _createTrustedTypesPolicy = function _createTrustedTypesPolicy(trustedTypes, purifyHostElement) {\n        if (typeof trustedTypes !== 'object' || typeof trustedTypes.createPolicy !== 'function') {\n            return null;\n        }\n        // Allow the callers to control the unique policy name\n        // by adding a data-tt-policy-suffix to the script element with the DOMPurify.\n        // Policy creation with duplicate names throws in Trusted Types.\n        let suffix = null;\n        const ATTR_NAME = 'data-tt-policy-suffix';\n        if (purifyHostElement && purifyHostElement.hasAttribute(ATTR_NAME)) {\n            suffix = purifyHostElement.getAttribute(ATTR_NAME);\n        }\n        const policyName = 'dompurify' + (suffix ? '#' + suffix : '');\n        try {\n            return trustedTypes.createPolicy(policyName, {\n                createHTML(html) {\n                    return html;\n                },\n                createScriptURL(scriptUrl) {\n                    return scriptUrl;\n                }\n            });\n        }\n        catch (_) {\n            // Policy creation failed (most likely another DOMPurify script has\n            // already run). Skip creating the policy, as this will only cause errors\n            // if TT are enforced.\n            console.warn('TrustedTypes policy ' + policyName + ' could not be created.');\n            return null;\n        }\n    };\n    function createDOMPurify() {\n        let window = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getGlobal();\n        const DOMPurify = root => createDOMPurify(root);\n        /**\n         * Version label, exposed for easier checks\n         * if DOMPurify is up to date or not\n         */\n        DOMPurify.version = '3.0.8';\n        /**\n         * Array of elements that DOMPurify removed during sanitation.\n         * Empty if nothing was removed.\n         */\n        DOMPurify.removed = [];\n        if (!window || !window.document || window.document.nodeType !== 9) {\n            // Not running in a browser, provide a factory function\n            // so that you can pass your own Window\n            DOMPurify.isSupported = false;\n            return DOMPurify;\n        }\n        let { document } = window;\n        const originalDocument = document;\n        const currentScript = originalDocument.currentScript;\n        const { DocumentFragment, HTMLTemplateElement, Node, Element, NodeFilter, NamedNodeMap = window.NamedNodeMap || window.MozNamedAttrMap, HTMLFormElement, DOMParser, trustedTypes } = window;\n        const ElementPrototype = Element.prototype;\n        const cloneNode = lookupGetter(ElementPrototype, 'cloneNode');\n        const getNextSibling = lookupGetter(ElementPrototype, 'nextSibling');\n        const getChildNodes = lookupGetter(ElementPrototype, 'childNodes');\n        const getParentNode = lookupGetter(ElementPrototype, 'parentNode');\n        // As per issue #47, the web-components registry is inherited by a\n        // new document created via createHTMLDocument. As per the spec\n        // (http://w3c.github.io/webcomponents/spec/custom/#creating-and-passing-registries)\n        // a new empty registry is used when creating a template contents owner\n        // document, so we use that as our parent document to ensure nothing\n        // is inherited.\n        if (typeof HTMLTemplateElement === 'function') {\n            const template = document.createElement('template');\n            if (template.content && template.content.ownerDocument) {\n                document = template.content.ownerDocument;\n            }\n        }\n        let trustedTypesPolicy;\n        let emptyHTML = '';\n        const { implementation, createNodeIterator, createDocumentFragment, getElementsByTagName } = document;\n        const { importNode } = originalDocument;\n        let hooks = {};\n        /**\n         * Expose whether this browser supports running the full DOMPurify.\n         */\n        DOMPurify.isSupported = typeof entries === 'function' && typeof getParentNode === 'function' && implementation && implementation.createHTMLDocument !== undefined;\n        const { MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR, DATA_ATTR, ARIA_ATTR, IS_SCRIPT_OR_DATA, ATTR_WHITESPACE } = EXPRESSIONS;\n        let { IS_ALLOWED_URI: IS_ALLOWED_URI$1 } = EXPRESSIONS;\n        /**\n         * We consider the elements and attributes below to be safe. Ideally\n         * don't add any new ones but feel free to remove unwanted ones.\n         */\n        /* allowed element names */\n        let ALLOWED_TAGS = null;\n        const DEFAULT_ALLOWED_TAGS = addToSet({}, [...html$1, ...svg$1, ...svgFilters, ...mathMl$1, ...text]);\n        /* Allowed attribute names */\n        let ALLOWED_ATTR = null;\n        const DEFAULT_ALLOWED_ATTR = addToSet({}, [...html, ...svg, ...mathMl, ...xml]);\n        /*\n         * Configure how DOMPUrify should handle custom elements and their attributes as well as customized built-in elements.\n         * @property {RegExp|Function|null} tagNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any custom elements)\n         * @property {RegExp|Function|null} attributeNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any attributes not on the allow list)\n         * @property {boolean} allowCustomizedBuiltInElements allow custom elements derived from built-ins if they pass CUSTOM_ELEMENT_HANDLING.tagNameCheck. Default: `false`.\n         */\n        let CUSTOM_ELEMENT_HANDLING = Object.seal(create(null, {\n            tagNameCheck: {\n                writable: true,\n                configurable: false,\n                enumerable: true,\n                value: null\n            },\n            attributeNameCheck: {\n                writable: true,\n                configurable: false,\n                enumerable: true,\n                value: null\n            },\n            allowCustomizedBuiltInElements: {\n                writable: true,\n                configurable: false,\n                enumerable: true,\n                value: false\n            }\n        }));\n        /* Explicitly forbidden tags (overrides ALLOWED_TAGS/ADD_TAGS) */\n        let FORBID_TAGS = null;\n        /* Explicitly forbidden attributes (overrides ALLOWED_ATTR/ADD_ATTR) */\n        let FORBID_ATTR = null;\n        /* Decide if ARIA attributes are okay */\n        let ALLOW_ARIA_ATTR = true;\n        /* Decide if custom data attributes are okay */\n        let ALLOW_DATA_ATTR = true;\n        /* Decide if unknown protocols are okay */\n        let ALLOW_UNKNOWN_PROTOCOLS = false;\n        /* Decide if self-closing tags in attributes are allowed.\n         * Usually removed due to a mXSS issue in jQuery 3.0 */\n        let ALLOW_SELF_CLOSE_IN_ATTR = true;\n        /* Output should be safe for common template engines.\n         * This means, DOMPurify removes data attributes, mustaches and ERB\n         */\n        let SAFE_FOR_TEMPLATES = false;\n        /* Decide if document with <html>... should be returned */\n        let WHOLE_DOCUMENT = false;\n        /* Track whether config is already set on this instance of DOMPurify. */\n        let SET_CONFIG = false;\n        /* Decide if all elements (e.g. style, script) must be children of\n         * document.body. By default, browsers might move them to document.head */\n        let FORCE_BODY = false;\n        /* Decide if a DOM `HTMLBodyElement` should be returned, instead of a html\n         * string (or a TrustedHTML object if Trusted Types are supported).\n         * If `WHOLE_DOCUMENT` is enabled a `HTMLHtmlElement` will be returned instead\n         */\n        let RETURN_DOM = false;\n        /* Decide if a DOM `DocumentFragment` should be returned, instead of a html\n         * string  (or a TrustedHTML object if Trusted Types are supported) */\n        let RETURN_DOM_FRAGMENT = false;\n        /* Try to return a Trusted Type object instead of a string, return a string in\n         * case Trusted Types are not supported  */\n        let RETURN_TRUSTED_TYPE = false;\n        /* Output should be free from DOM clobbering attacks?\n         * This sanitizes markups named with colliding, clobberable built-in DOM APIs.\n         */\n        let SANITIZE_DOM = true;\n        /* Achieve full DOM Clobbering protection by isolating the namespace of named\n         * properties and JS variables, mitigating attacks that abuse the HTML/DOM spec rules.\n         *\n         * HTML/DOM spec rules that enable DOM Clobbering:\n         *   - Named Access on Window (§7.3.3)\n         *   - DOM Tree Accessors (§3.1.5)\n         *   - Form Element Parent-Child Relations (§4.10.3)\n         *   - Iframe srcdoc / Nested WindowProxies (§4.8.5)\n         *   - HTMLCollection (§4.2.10.2)\n         *\n         * Namespace isolation is implemented by prefixing `id` and `name` attributes\n         * with a constant string, i.e., `user-content-`\n         */\n        let SANITIZE_NAMED_PROPS = false;\n        const SANITIZE_NAMED_PROPS_PREFIX = 'user-content-';\n        /* Keep element content when removing element? */\n        let KEEP_CONTENT = true;\n        /* If a `Node` is passed to sanitize(), then performs sanitization in-place instead\n         * of importing it into a new Document and returning a sanitized copy */\n        let IN_PLACE = false;\n        /* Allow usage of profiles like html, svg and mathMl */\n        let USE_PROFILES = {};\n        /* Tags to ignore content of when KEEP_CONTENT is true */\n        let FORBID_CONTENTS = null;\n        const DEFAULT_FORBID_CONTENTS = addToSet({}, ['annotation-xml', 'audio', 'colgroup', 'desc', 'foreignobject', 'head', 'iframe', 'math', 'mi', 'mn', 'mo', 'ms', 'mtext', 'noembed', 'noframes', 'noscript', 'plaintext', 'script', 'style', 'svg', 'template', 'thead', 'title', 'video', 'xmp']);\n        /* Tags that are safe for data: URIs */\n        let DATA_URI_TAGS = null;\n        const DEFAULT_DATA_URI_TAGS = addToSet({}, ['audio', 'video', 'img', 'source', 'image', 'track']);\n        /* Attributes safe for values like \"javascript:\" */\n        let URI_SAFE_ATTRIBUTES = null;\n        const DEFAULT_URI_SAFE_ATTRIBUTES = addToSet({}, ['alt', 'class', 'for', 'id', 'label', 'name', 'pattern', 'placeholder', 'role', 'summary', 'title', 'value', 'style', 'xmlns']);\n        const MATHML_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';\n        const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n        const HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\n        /* Document namespace */\n        let NAMESPACE = HTML_NAMESPACE;\n        let IS_EMPTY_INPUT = false;\n        /* Allowed XHTML+XML namespaces */\n        let ALLOWED_NAMESPACES = null;\n        const DEFAULT_ALLOWED_NAMESPACES = addToSet({}, [MATHML_NAMESPACE, SVG_NAMESPACE, HTML_NAMESPACE], stringToString);\n        /* Parsing of strict XHTML documents */\n        let PARSER_MEDIA_TYPE = null;\n        const SUPPORTED_PARSER_MEDIA_TYPES = ['application/xhtml+xml', 'text/html'];\n        const DEFAULT_PARSER_MEDIA_TYPE = 'text/html';\n        let transformCaseFunc = null;\n        /* Keep a reference to config to pass to hooks */\n        let CONFIG = null;\n        /* Ideally, do not touch anything below this line */\n        /* ______________________________________________ */\n        const formElement = document.createElement('form');\n        const isRegexOrFunction = function isRegexOrFunction(testValue) {\n            return testValue instanceof RegExp || testValue instanceof Function;\n        };\n        /**\n         * _parseConfig\n         *\n         * @param  {Object} cfg optional config literal\n         */\n        // eslint-disable-next-line complexity\n        const _parseConfig = function _parseConfig() {\n            let cfg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n            if (CONFIG && CONFIG === cfg) {\n                return;\n            }\n            /* Shield configuration object from tampering */\n            if (!cfg || typeof cfg !== 'object') {\n                cfg = {};\n            }\n            /* Shield configuration object from prototype pollution */\n            cfg = clone(cfg);\n            PARSER_MEDIA_TYPE =\n                // eslint-disable-next-line unicorn/prefer-includes\n                SUPPORTED_PARSER_MEDIA_TYPES.indexOf(cfg.PARSER_MEDIA_TYPE) === -1 ? DEFAULT_PARSER_MEDIA_TYPE : cfg.PARSER_MEDIA_TYPE;\n            // HTML tags and attributes are not case-sensitive, converting to lowercase. Keeping XHTML as is.\n            transformCaseFunc = PARSER_MEDIA_TYPE === 'application/xhtml+xml' ? stringToString : stringToLowerCase;\n            /* Set configuration parameters */\n            ALLOWED_TAGS = 'ALLOWED_TAGS' in cfg ? addToSet({}, cfg.ALLOWED_TAGS, transformCaseFunc) : DEFAULT_ALLOWED_TAGS;\n            ALLOWED_ATTR = 'ALLOWED_ATTR' in cfg ? addToSet({}, cfg.ALLOWED_ATTR, transformCaseFunc) : DEFAULT_ALLOWED_ATTR;\n            ALLOWED_NAMESPACES = 'ALLOWED_NAMESPACES' in cfg ? addToSet({}, cfg.ALLOWED_NAMESPACES, stringToString) : DEFAULT_ALLOWED_NAMESPACES;\n            URI_SAFE_ATTRIBUTES = 'ADD_URI_SAFE_ATTR' in cfg ? addToSet(clone(DEFAULT_URI_SAFE_ATTRIBUTES), \n            // eslint-disable-line indent\n            cfg.ADD_URI_SAFE_ATTR, \n            // eslint-disable-line indent\n            transformCaseFunc // eslint-disable-line indent\n            ) // eslint-disable-line indent\n                : DEFAULT_URI_SAFE_ATTRIBUTES;\n            DATA_URI_TAGS = 'ADD_DATA_URI_TAGS' in cfg ? addToSet(clone(DEFAULT_DATA_URI_TAGS), \n            // eslint-disable-line indent\n            cfg.ADD_DATA_URI_TAGS, \n            // eslint-disable-line indent\n            transformCaseFunc // eslint-disable-line indent\n            ) // eslint-disable-line indent\n                : DEFAULT_DATA_URI_TAGS;\n            FORBID_CONTENTS = 'FORBID_CONTENTS' in cfg ? addToSet({}, cfg.FORBID_CONTENTS, transformCaseFunc) : DEFAULT_FORBID_CONTENTS;\n            FORBID_TAGS = 'FORBID_TAGS' in cfg ? addToSet({}, cfg.FORBID_TAGS, transformCaseFunc) : {};\n            FORBID_ATTR = 'FORBID_ATTR' in cfg ? addToSet({}, cfg.FORBID_ATTR, transformCaseFunc) : {};\n            USE_PROFILES = 'USE_PROFILES' in cfg ? cfg.USE_PROFILES : false;\n            ALLOW_ARIA_ATTR = cfg.ALLOW_ARIA_ATTR !== false; // Default true\n            ALLOW_DATA_ATTR = cfg.ALLOW_DATA_ATTR !== false; // Default true\n            ALLOW_UNKNOWN_PROTOCOLS = cfg.ALLOW_UNKNOWN_PROTOCOLS || false; // Default false\n            ALLOW_SELF_CLOSE_IN_ATTR = cfg.ALLOW_SELF_CLOSE_IN_ATTR !== false; // Default true\n            SAFE_FOR_TEMPLATES = cfg.SAFE_FOR_TEMPLATES || false; // Default false\n            WHOLE_DOCUMENT = cfg.WHOLE_DOCUMENT || false; // Default false\n            RETURN_DOM = cfg.RETURN_DOM || false; // Default false\n            RETURN_DOM_FRAGMENT = cfg.RETURN_DOM_FRAGMENT || false; // Default false\n            RETURN_TRUSTED_TYPE = cfg.RETURN_TRUSTED_TYPE || false; // Default false\n            FORCE_BODY = cfg.FORCE_BODY || false; // Default false\n            SANITIZE_DOM = cfg.SANITIZE_DOM !== false; // Default true\n            SANITIZE_NAMED_PROPS = cfg.SANITIZE_NAMED_PROPS || false; // Default false\n            KEEP_CONTENT = cfg.KEEP_CONTENT !== false; // Default true\n            IN_PLACE = cfg.IN_PLACE || false; // Default false\n            IS_ALLOWED_URI$1 = cfg.ALLOWED_URI_REGEXP || IS_ALLOWED_URI;\n            NAMESPACE = cfg.NAMESPACE || HTML_NAMESPACE;\n            CUSTOM_ELEMENT_HANDLING = cfg.CUSTOM_ELEMENT_HANDLING || {};\n            if (cfg.CUSTOM_ELEMENT_HANDLING && isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck)) {\n                CUSTOM_ELEMENT_HANDLING.tagNameCheck = cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck;\n            }\n            if (cfg.CUSTOM_ELEMENT_HANDLING && isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck)) {\n                CUSTOM_ELEMENT_HANDLING.attributeNameCheck = cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck;\n            }\n            if (cfg.CUSTOM_ELEMENT_HANDLING && typeof cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements === 'boolean') {\n                CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements = cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements;\n            }\n            if (SAFE_FOR_TEMPLATES) {\n                ALLOW_DATA_ATTR = false;\n            }\n            if (RETURN_DOM_FRAGMENT) {\n                RETURN_DOM = true;\n            }\n            /* Parse profile info */\n            if (USE_PROFILES) {\n                ALLOWED_TAGS = addToSet({}, text);\n                ALLOWED_ATTR = [];\n                if (USE_PROFILES.html === true) {\n                    addToSet(ALLOWED_TAGS, html$1);\n                    addToSet(ALLOWED_ATTR, html);\n                }\n                if (USE_PROFILES.svg === true) {\n                    addToSet(ALLOWED_TAGS, svg$1);\n                    addToSet(ALLOWED_ATTR, svg);\n                    addToSet(ALLOWED_ATTR, xml);\n                }\n                if (USE_PROFILES.svgFilters === true) {\n                    addToSet(ALLOWED_TAGS, svgFilters);\n                    addToSet(ALLOWED_ATTR, svg);\n                    addToSet(ALLOWED_ATTR, xml);\n                }\n                if (USE_PROFILES.mathMl === true) {\n                    addToSet(ALLOWED_TAGS, mathMl$1);\n                    addToSet(ALLOWED_ATTR, mathMl);\n                    addToSet(ALLOWED_ATTR, xml);\n                }\n            }\n            /* Merge configuration parameters */\n            if (cfg.ADD_TAGS) {\n                if (ALLOWED_TAGS === DEFAULT_ALLOWED_TAGS) {\n                    ALLOWED_TAGS = clone(ALLOWED_TAGS);\n                }\n                addToSet(ALLOWED_TAGS, cfg.ADD_TAGS, transformCaseFunc);\n            }\n            if (cfg.ADD_ATTR) {\n                if (ALLOWED_ATTR === DEFAULT_ALLOWED_ATTR) {\n                    ALLOWED_ATTR = clone(ALLOWED_ATTR);\n                }\n                addToSet(ALLOWED_ATTR, cfg.ADD_ATTR, transformCaseFunc);\n            }\n            if (cfg.ADD_URI_SAFE_ATTR) {\n                addToSet(URI_SAFE_ATTRIBUTES, cfg.ADD_URI_SAFE_ATTR, transformCaseFunc);\n            }\n            if (cfg.FORBID_CONTENTS) {\n                if (FORBID_CONTENTS === DEFAULT_FORBID_CONTENTS) {\n                    FORBID_CONTENTS = clone(FORBID_CONTENTS);\n                }\n                addToSet(FORBID_CONTENTS, cfg.FORBID_CONTENTS, transformCaseFunc);\n            }\n            /* Add #text in case KEEP_CONTENT is set to true */\n            if (KEEP_CONTENT) {\n                ALLOWED_TAGS['#text'] = true;\n            }\n            /* Add html, head and body to ALLOWED_TAGS in case WHOLE_DOCUMENT is true */\n            if (WHOLE_DOCUMENT) {\n                addToSet(ALLOWED_TAGS, ['html', 'head', 'body']);\n            }\n            /* Add tbody to ALLOWED_TAGS in case tables are permitted, see #286, #365 */\n            if (ALLOWED_TAGS.table) {\n                addToSet(ALLOWED_TAGS, ['tbody']);\n                delete FORBID_TAGS.tbody;\n            }\n            if (cfg.TRUSTED_TYPES_POLICY) {\n                if (typeof cfg.TRUSTED_TYPES_POLICY.createHTML !== 'function') {\n                    throw typeErrorCreate('TRUSTED_TYPES_POLICY configuration option must provide a \"createHTML\" hook.');\n                }\n                if (typeof cfg.TRUSTED_TYPES_POLICY.createScriptURL !== 'function') {\n                    throw typeErrorCreate('TRUSTED_TYPES_POLICY configuration option must provide a \"createScriptURL\" hook.');\n                }\n                // Overwrite existing TrustedTypes policy.\n                trustedTypesPolicy = cfg.TRUSTED_TYPES_POLICY;\n                // Sign local variables required by `sanitize`.\n                emptyHTML = trustedTypesPolicy.createHTML('');\n            }\n            else {\n                // Uninitialized policy, attempt to initialize the internal dompurify policy.\n                if (trustedTypesPolicy === undefined) {\n                    trustedTypesPolicy = _createTrustedTypesPolicy(trustedTypes, currentScript);\n                }\n                // If creating the internal policy succeeded sign internal variables.\n                if (trustedTypesPolicy !== null && typeof emptyHTML === 'string') {\n                    emptyHTML = trustedTypesPolicy.createHTML('');\n                }\n            }\n            // Prevent further manipulation of configuration.\n            // Not available in IE8, Safari 5, etc.\n            if (freeze) {\n                freeze(cfg);\n            }\n            CONFIG = cfg;\n        };\n        const MATHML_TEXT_INTEGRATION_POINTS = addToSet({}, ['mi', 'mo', 'mn', 'ms', 'mtext']);\n        const HTML_INTEGRATION_POINTS = addToSet({}, ['foreignobject', 'desc', 'title', 'annotation-xml']);\n        // Certain elements are allowed in both SVG and HTML\n        // namespace. We need to specify them explicitly\n        // so that they don't get erroneously deleted from\n        // HTML namespace.\n        const COMMON_SVG_AND_HTML_ELEMENTS = addToSet({}, ['title', 'style', 'font', 'a', 'script']);\n        /* Keep track of all possible SVG and MathML tags\n         * so that we can perform the namespace checks\n         * correctly. */\n        const ALL_SVG_TAGS = addToSet({}, [...svg$1, ...svgFilters, ...svgDisallowed]);\n        const ALL_MATHML_TAGS = addToSet({}, [...mathMl$1, ...mathMlDisallowed]);\n        /**\n         * @param  {Element} element a DOM element whose namespace is being checked\n         * @returns {boolean} Return false if the element has a\n         *  namespace that a spec-compliant parser would never\n         *  return. Return true otherwise.\n         */\n        const _checkValidNamespace = function _checkValidNamespace(element) {\n            let parent = getParentNode(element);\n            // In JSDOM, if we're inside shadow DOM, then parentNode\n            // can be null. We just simulate parent in this case.\n            if (!parent || !parent.tagName) {\n                parent = {\n                    namespaceURI: NAMESPACE,\n                    tagName: 'template'\n                };\n            }\n            const tagName = stringToLowerCase(element.tagName);\n            const parentTagName = stringToLowerCase(parent.tagName);\n            if (!ALLOWED_NAMESPACES[element.namespaceURI]) {\n                return false;\n            }\n            if (element.namespaceURI === SVG_NAMESPACE) {\n                // The only way to switch from HTML namespace to SVG\n                // is via <svg>. If it happens via any other tag, then\n                // it should be killed.\n                if (parent.namespaceURI === HTML_NAMESPACE) {\n                    return tagName === 'svg';\n                }\n                // The only way to switch from MathML to SVG is via`\n                // svg if parent is either <annotation-xml> or MathML\n                // text integration points.\n                if (parent.namespaceURI === MATHML_NAMESPACE) {\n                    return tagName === 'svg' && (parentTagName === 'annotation-xml' || MATHML_TEXT_INTEGRATION_POINTS[parentTagName]);\n                }\n                // We only allow elements that are defined in SVG\n                // spec. All others are disallowed in SVG namespace.\n                return Boolean(ALL_SVG_TAGS[tagName]);\n            }\n            if (element.namespaceURI === MATHML_NAMESPACE) {\n                // The only way to switch from HTML namespace to MathML\n                // is via <math>. If it happens via any other tag, then\n                // it should be killed.\n                if (parent.namespaceURI === HTML_NAMESPACE) {\n                    return tagName === 'math';\n                }\n                // The only way to switch from SVG to MathML is via\n                // <math> and HTML integration points\n                if (parent.namespaceURI === SVG_NAMESPACE) {\n                    return tagName === 'math' && HTML_INTEGRATION_POINTS[parentTagName];\n                }\n                // We only allow elements that are defined in MathML\n                // spec. All others are disallowed in MathML namespace.\n                return Boolean(ALL_MATHML_TAGS[tagName]);\n            }\n            if (element.namespaceURI === HTML_NAMESPACE) {\n                // The only way to switch from SVG to HTML is via\n                // HTML integration points, and from MathML to HTML\n                // is via MathML text integration points\n                if (parent.namespaceURI === SVG_NAMESPACE && !HTML_INTEGRATION_POINTS[parentTagName]) {\n                    return false;\n                }\n                if (parent.namespaceURI === MATHML_NAMESPACE && !MATHML_TEXT_INTEGRATION_POINTS[parentTagName]) {\n                    return false;\n                }\n                // We disallow tags that are specific for MathML\n                // or SVG and should never appear in HTML namespace\n                return !ALL_MATHML_TAGS[tagName] && (COMMON_SVG_AND_HTML_ELEMENTS[tagName] || !ALL_SVG_TAGS[tagName]);\n            }\n            // For XHTML and XML documents that support custom namespaces\n            if (PARSER_MEDIA_TYPE === 'application/xhtml+xml' && ALLOWED_NAMESPACES[element.namespaceURI]) {\n                return true;\n            }\n            // The code should never reach this place (this means\n            // that the element somehow got namespace that is not\n            // HTML, SVG, MathML or allowed via ALLOWED_NAMESPACES).\n            // Return false just in case.\n            return false;\n        };\n        /**\n         * _forceRemove\n         *\n         * @param  {Node} node a DOM node\n         */\n        const _forceRemove = function _forceRemove(node) {\n            arrayPush(DOMPurify.removed, {\n                element: node\n            });\n            try {\n                // eslint-disable-next-line unicorn/prefer-dom-node-remove\n                node.parentNode.removeChild(node);\n            }\n            catch (_) {\n                node.remove();\n            }\n        };\n        /**\n         * _removeAttribute\n         *\n         * @param  {String} name an Attribute name\n         * @param  {Node} node a DOM node\n         */\n        const _removeAttribute = function _removeAttribute(name, node) {\n            try {\n                arrayPush(DOMPurify.removed, {\n                    attribute: node.getAttributeNode(name),\n                    from: node\n                });\n            }\n            catch (_) {\n                arrayPush(DOMPurify.removed, {\n                    attribute: null,\n                    from: node\n                });\n            }\n            node.removeAttribute(name);\n            // We void attribute values for unremovable \"is\"\" attributes\n            if (name === 'is' && !ALLOWED_ATTR[name]) {\n                if (RETURN_DOM || RETURN_DOM_FRAGMENT) {\n                    try {\n                        _forceRemove(node);\n                    }\n                    catch (_) { }\n                }\n                else {\n                    try {\n                        node.setAttribute(name, '');\n                    }\n                    catch (_) { }\n                }\n            }\n        };\n        /**\n         * _initDocument\n         *\n         * @param  {String} dirty a string of dirty markup\n         * @return {Document} a DOM, filled with the dirty markup\n         */\n        const _initDocument = function _initDocument(dirty) {\n            /* Create a HTML document */\n            let doc = null;\n            let leadingWhitespace = null;\n            if (FORCE_BODY) {\n                dirty = '<remove></remove>' + dirty;\n            }\n            else {\n                /* If FORCE_BODY isn't used, leading whitespace needs to be preserved manually */\n                const matches = stringMatch(dirty, /^[\\r\\n\\t ]+/);\n                leadingWhitespace = matches && matches[0];\n            }\n            if (PARSER_MEDIA_TYPE === 'application/xhtml+xml' && NAMESPACE === HTML_NAMESPACE) {\n                // Root of XHTML doc must contain xmlns declaration (see https://www.w3.org/TR/xhtml1/normative.html#strict)\n                dirty = '<html xmlns=\"http://www.w3.org/1999/xhtml\"><head></head><body>' + dirty + '</body></html>';\n            }\n            const dirtyPayload = trustedTypesPolicy ? trustedTypesPolicy.createHTML(dirty) : dirty;\n            /*\n             * Use the DOMParser API by default, fallback later if needs be\n             * DOMParser not work for svg when has multiple root element.\n             */\n            if (NAMESPACE === HTML_NAMESPACE) {\n                try {\n                    doc = new DOMParser().parseFromString(dirtyPayload, PARSER_MEDIA_TYPE);\n                }\n                catch (_) { }\n            }\n            /* Use createHTMLDocument in case DOMParser is not available */\n            if (!doc || !doc.documentElement) {\n                doc = implementation.createDocument(NAMESPACE, 'template', null);\n                try {\n                    doc.documentElement.innerHTML = IS_EMPTY_INPUT ? emptyHTML : dirtyPayload;\n                }\n                catch (_) {\n                    // Syntax error if dirtyPayload is invalid xml\n                }\n            }\n            const body = doc.body || doc.documentElement;\n            if (dirty && leadingWhitespace) {\n                body.insertBefore(document.createTextNode(leadingWhitespace), body.childNodes[0] || null);\n            }\n            /* Work on whole document or just its body */\n            if (NAMESPACE === HTML_NAMESPACE) {\n                return getElementsByTagName.call(doc, WHOLE_DOCUMENT ? 'html' : 'body')[0];\n            }\n            return WHOLE_DOCUMENT ? doc.documentElement : body;\n        };\n        /**\n         * Creates a NodeIterator object that you can use to traverse filtered lists of nodes or elements in a document.\n         *\n         * @param  {Node} root The root element or node to start traversing on.\n         * @return {NodeIterator} The created NodeIterator\n         */\n        const _createNodeIterator = function _createNodeIterator(root) {\n            return createNodeIterator.call(root.ownerDocument || root, root, \n            // eslint-disable-next-line no-bitwise\n            NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT | NodeFilter.SHOW_TEXT, null);\n        };\n        /**\n         * _isClobbered\n         *\n         * @param  {Node} elm element to check for clobbering attacks\n         * @return {Boolean} true if clobbered, false if safe\n         */\n        const _isClobbered = function _isClobbered(elm) {\n            return elm instanceof HTMLFormElement && (typeof elm.nodeName !== 'string' || typeof elm.textContent !== 'string' || typeof elm.removeChild !== 'function' || !(elm.attributes instanceof NamedNodeMap) || typeof elm.removeAttribute !== 'function' || typeof elm.setAttribute !== 'function' || typeof elm.namespaceURI !== 'string' || typeof elm.insertBefore !== 'function' || typeof elm.hasChildNodes !== 'function');\n        };\n        /**\n         * Checks whether the given object is a DOM node.\n         *\n         * @param  {Node} object object to check whether it's a DOM node\n         * @return {Boolean} true is object is a DOM node\n         */\n        const _isNode = function _isNode(object) {\n            return typeof Node === 'function' && object instanceof Node;\n        };\n        /**\n         * _executeHook\n         * Execute user configurable hooks\n         *\n         * @param  {String} entryPoint  Name of the hook's entry point\n         * @param  {Node} currentNode node to work on with the hook\n         * @param  {Object} data additional hook parameters\n         */\n        const _executeHook = function _executeHook(entryPoint, currentNode, data) {\n            if (!hooks[entryPoint]) {\n                return;\n            }\n            arrayForEach(hooks[entryPoint], hook => {\n                hook.call(DOMPurify, currentNode, data, CONFIG);\n            });\n        };\n        /**\n         * _sanitizeElements\n         *\n         * @protect nodeName\n         * @protect textContent\n         * @protect removeChild\n         *\n         * @param   {Node} currentNode to check for permission to exist\n         * @return  {Boolean} true if node was killed, false if left alive\n         */\n        const _sanitizeElements = function _sanitizeElements(currentNode) {\n            let content = null;\n            /* Execute a hook if present */\n            _executeHook('beforeSanitizeElements', currentNode, null);\n            /* Check if element is clobbered or can clobber */\n            if (_isClobbered(currentNode)) {\n                _forceRemove(currentNode);\n                return true;\n            }\n            /* Now let's check the element's type and name */\n            const tagName = transformCaseFunc(currentNode.nodeName);\n            /* Execute a hook if present */\n            _executeHook('uponSanitizeElement', currentNode, {\n                tagName,\n                allowedTags: ALLOWED_TAGS\n            });\n            /* Detect mXSS attempts abusing namespace confusion */\n            if (currentNode.hasChildNodes() && !_isNode(currentNode.firstElementChild) && regExpTest(/<[/\\w]/g, currentNode.innerHTML) && regExpTest(/<[/\\w]/g, currentNode.textContent)) {\n                _forceRemove(currentNode);\n                return true;\n            }\n            /* Remove element if anything forbids its presence */\n            if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n                /* Check if we have a custom element to handle */\n                if (!FORBID_TAGS[tagName] && _isBasicCustomElement(tagName)) {\n                    if (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, tagName)) {\n                        return false;\n                    }\n                    if (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(tagName)) {\n                        return false;\n                    }\n                }\n                /* Keep content except for bad-listed elements */\n                if (KEEP_CONTENT && !FORBID_CONTENTS[tagName]) {\n                    const parentNode = getParentNode(currentNode) || currentNode.parentNode;\n                    const childNodes = getChildNodes(currentNode) || currentNode.childNodes;\n                    if (childNodes && parentNode) {\n                        const childCount = childNodes.length;\n                        for (let i = childCount - 1; i >= 0; --i) {\n                            parentNode.insertBefore(cloneNode(childNodes[i], true), getNextSibling(currentNode));\n                        }\n                    }\n                }\n                _forceRemove(currentNode);\n                return true;\n            }\n            /* Check whether element has a valid namespace */\n            if (currentNode instanceof Element && !_checkValidNamespace(currentNode)) {\n                _forceRemove(currentNode);\n                return true;\n            }\n            /* Make sure that older browsers don't get fallback-tag mXSS */\n            if ((tagName === 'noscript' || tagName === 'noembed' || tagName === 'noframes') && regExpTest(/<\\/no(script|embed|frames)/i, currentNode.innerHTML)) {\n                _forceRemove(currentNode);\n                return true;\n            }\n            /* Sanitize element content to be template-safe */\n            if (SAFE_FOR_TEMPLATES && currentNode.nodeType === 3) {\n                /* Get the element's text content */\n                content = currentNode.textContent;\n                arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], expr => {\n                    content = stringReplace(content, expr, ' ');\n                });\n                if (currentNode.textContent !== content) {\n                    arrayPush(DOMPurify.removed, {\n                        element: currentNode.cloneNode()\n                    });\n                    currentNode.textContent = content;\n                }\n            }\n            /* Execute a hook if present */\n            _executeHook('afterSanitizeElements', currentNode, null);\n            return false;\n        };\n        /**\n         * _isValidAttribute\n         *\n         * @param  {string} lcTag Lowercase tag name of containing element.\n         * @param  {string} lcName Lowercase attribute name.\n         * @param  {string} value Attribute value.\n         * @return {Boolean} Returns true if `value` is valid, otherwise false.\n         */\n        // eslint-disable-next-line complexity\n        const _isValidAttribute = function _isValidAttribute(lcTag, lcName, value) {\n            /* Make sure attribute cannot clobber */\n            if (SANITIZE_DOM && (lcName === 'id' || lcName === 'name') && (value in document || value in formElement)) {\n                return false;\n            }\n            /* Allow valid data-* attributes: At least one character after \"-\"\n                (https://html.spec.whatwg.org/multipage/dom.html#embedding-custom-non-visible-data-with-the-data-*-attributes)\n                XML-compatible (https://html.spec.whatwg.org/multipage/infrastructure.html#xml-compatible and http://www.w3.org/TR/xml/#d0e804)\n                We don't need to check the value; it's always URI safe. */\n            if (ALLOW_DATA_ATTR && !FORBID_ATTR[lcName] && regExpTest(DATA_ATTR, lcName))\n                ;\n            else if (ALLOW_ARIA_ATTR && regExpTest(ARIA_ATTR, lcName))\n                ;\n            else if (!ALLOWED_ATTR[lcName] || FORBID_ATTR[lcName]) {\n                if (\n                // First condition does a very basic check if a) it's basically a valid custom element tagname AND\n                // b) if the tagName passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n                // and c) if the attribute name passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.attributeNameCheck\n                _isBasicCustomElement(lcTag) && (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, lcTag) || CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(lcTag)) && (CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.attributeNameCheck, lcName) || CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.attributeNameCheck(lcName)) ||\n                    // Alternative, second condition checks if it's an `is`-attribute, AND\n                    // the value passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n                    lcName === 'is' && CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements && (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, value) || CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(value)))\n                    ;\n                else {\n                    return false;\n                }\n                /* Check value is safe. First, is attr inert? If so, is safe */\n            }\n            else if (URI_SAFE_ATTRIBUTES[lcName])\n                ;\n            else if (regExpTest(IS_ALLOWED_URI$1, stringReplace(value, ATTR_WHITESPACE, '')))\n                ;\n            else if ((lcName === 'src' || lcName === 'xlink:href' || lcName === 'href') && lcTag !== 'script' && stringIndexOf(value, 'data:') === 0 && DATA_URI_TAGS[lcTag])\n                ;\n            else if (ALLOW_UNKNOWN_PROTOCOLS && !regExpTest(IS_SCRIPT_OR_DATA, stringReplace(value, ATTR_WHITESPACE, '')))\n                ;\n            else if (value) {\n                return false;\n            }\n            else\n                ;\n            return true;\n        };\n        /**\n         * _isBasicCustomElement\n         * checks if at least one dash is included in tagName, and it's not the first char\n         * for more sophisticated checking see https://github.com/sindresorhus/validate-element-name\n         *\n         * @param {string} tagName name of the tag of the node to sanitize\n         * @returns {boolean} Returns true if the tag name meets the basic criteria for a custom element, otherwise false.\n         */\n        const _isBasicCustomElement = function _isBasicCustomElement(tagName) {\n            return tagName.indexOf('-') > 0;\n        };\n        /**\n         * _sanitizeAttributes\n         *\n         * @protect attributes\n         * @protect nodeName\n         * @protect removeAttribute\n         * @protect setAttribute\n         *\n         * @param  {Node} currentNode to sanitize\n         */\n        const _sanitizeAttributes = function _sanitizeAttributes(currentNode) {\n            /* Execute a hook if present */\n            _executeHook('beforeSanitizeAttributes', currentNode, null);\n            const { attributes } = currentNode;\n            /* Check if we have attributes; if not we might have a text node */\n            if (!attributes) {\n                return;\n            }\n            const hookEvent = {\n                attrName: '',\n                attrValue: '',\n                keepAttr: true,\n                allowedAttributes: ALLOWED_ATTR\n            };\n            let l = attributes.length;\n            /* Go backwards over all attributes; safely remove bad ones */\n            while (l--) {\n                const attr = attributes[l];\n                const { name, namespaceURI, value: attrValue } = attr;\n                const lcName = transformCaseFunc(name);\n                let value = name === 'value' ? attrValue : stringTrim(attrValue);\n                /* Execute a hook if present */\n                hookEvent.attrName = lcName;\n                hookEvent.attrValue = value;\n                hookEvent.keepAttr = true;\n                hookEvent.forceKeepAttr = undefined; // Allows developers to see this is a property they can set\n                _executeHook('uponSanitizeAttribute', currentNode, hookEvent);\n                value = hookEvent.attrValue;\n                /* Did the hooks approve of the attribute? */\n                if (hookEvent.forceKeepAttr) {\n                    continue;\n                }\n                /* Remove attribute */\n                _removeAttribute(name, currentNode);\n                /* Did the hooks approve of the attribute? */\n                if (!hookEvent.keepAttr) {\n                    continue;\n                }\n                /* Work around a security issue in jQuery 3.0 */\n                if (!ALLOW_SELF_CLOSE_IN_ATTR && regExpTest(/\\/>/i, value)) {\n                    _removeAttribute(name, currentNode);\n                    continue;\n                }\n                /* Sanitize attribute content to be template-safe */\n                if (SAFE_FOR_TEMPLATES) {\n                    arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], expr => {\n                        value = stringReplace(value, expr, ' ');\n                    });\n                }\n                /* Is `value` valid for this attribute? */\n                const lcTag = transformCaseFunc(currentNode.nodeName);\n                if (!_isValidAttribute(lcTag, lcName, value)) {\n                    continue;\n                }\n                /* Full DOM Clobbering protection via namespace isolation,\n                 * Prefix id and name attributes with `user-content-`\n                 */\n                if (SANITIZE_NAMED_PROPS && (lcName === 'id' || lcName === 'name')) {\n                    // Remove the attribute with this value\n                    _removeAttribute(name, currentNode);\n                    // Prefix the value and later re-create the attribute with the sanitized value\n                    value = SANITIZE_NAMED_PROPS_PREFIX + value;\n                }\n                /* Handle attributes that require Trusted Types */\n                if (trustedTypesPolicy && typeof trustedTypes === 'object' && typeof trustedTypes.getAttributeType === 'function') {\n                    if (namespaceURI)\n                        ;\n                    else {\n                        switch (trustedTypes.getAttributeType(lcTag, lcName)) {\n                            case 'TrustedHTML':\n                                {\n                                    value = trustedTypesPolicy.createHTML(value);\n                                    break;\n                                }\n                            case 'TrustedScriptURL':\n                                {\n                                    value = trustedTypesPolicy.createScriptURL(value);\n                                    break;\n                                }\n                        }\n                    }\n                }\n                /* Handle invalid data-* attribute set by try-catching it */\n                try {\n                    if (namespaceURI) {\n                        currentNode.setAttributeNS(namespaceURI, name, value);\n                    }\n                    else {\n                        /* Fallback to setAttribute() for browser-unrecognized namespaces e.g. \"x-schema\". */\n                        currentNode.setAttribute(name, value);\n                    }\n                    arrayPop(DOMPurify.removed);\n                }\n                catch (_) { }\n            }\n            /* Execute a hook if present */\n            _executeHook('afterSanitizeAttributes', currentNode, null);\n        };\n        /**\n         * _sanitizeShadowDOM\n         *\n         * @param  {DocumentFragment} fragment to iterate over recursively\n         */\n        const _sanitizeShadowDOM = function _sanitizeShadowDOM(fragment) {\n            let shadowNode = null;\n            const shadowIterator = _createNodeIterator(fragment);\n            /* Execute a hook if present */\n            _executeHook('beforeSanitizeShadowDOM', fragment, null);\n            while (shadowNode = shadowIterator.nextNode()) {\n                /* Execute a hook if present */\n                _executeHook('uponSanitizeShadowNode', shadowNode, null);\n                /* Sanitize tags and elements */\n                if (_sanitizeElements(shadowNode)) {\n                    continue;\n                }\n                /* Deep shadow DOM detected */\n                if (shadowNode.content instanceof DocumentFragment) {\n                    _sanitizeShadowDOM(shadowNode.content);\n                }\n                /* Check attributes, sanitize if necessary */\n                _sanitizeAttributes(shadowNode);\n            }\n            /* Execute a hook if present */\n            _executeHook('afterSanitizeShadowDOM', fragment, null);\n        };\n        /**\n         * Sanitize\n         * Public method providing core sanitation functionality\n         *\n         * @param {String|Node} dirty string or DOM node\n         * @param {Object} cfg object\n         */\n        // eslint-disable-next-line complexity\n        DOMPurify.sanitize = function (dirty) {\n            let cfg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n            let body = null;\n            let importedNode = null;\n            let currentNode = null;\n            let returnNode = null;\n            /* Make sure we have a string to sanitize.\n              DO NOT return early, as this will return the wrong type if\n              the user has requested a DOM object rather than a string */\n            IS_EMPTY_INPUT = !dirty;\n            if (IS_EMPTY_INPUT) {\n                dirty = '<!-->';\n            }\n            /* Stringify, in case dirty is an object */\n            if (typeof dirty !== 'string' && !_isNode(dirty)) {\n                if (typeof dirty.toString === 'function') {\n                    dirty = dirty.toString();\n                    if (typeof dirty !== 'string') {\n                        throw typeErrorCreate('dirty is not a string, aborting');\n                    }\n                }\n                else {\n                    throw typeErrorCreate('toString is not a function');\n                }\n            }\n            /* Return dirty HTML if DOMPurify cannot run */\n            if (!DOMPurify.isSupported) {\n                return dirty;\n            }\n            /* Assign config vars */\n            if (!SET_CONFIG) {\n                _parseConfig(cfg);\n            }\n            /* Clean up removed elements */\n            DOMPurify.removed = [];\n            /* Check if dirty is correctly typed for IN_PLACE */\n            if (typeof dirty === 'string') {\n                IN_PLACE = false;\n            }\n            if (IN_PLACE) {\n                /* Do some early pre-sanitization to avoid unsafe root nodes */\n                if (dirty.nodeName) {\n                    const tagName = transformCaseFunc(dirty.nodeName);\n                    if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n                        throw typeErrorCreate('root node is forbidden and cannot be sanitized in-place');\n                    }\n                }\n            }\n            else if (dirty instanceof Node) {\n                /* If dirty is a DOM element, append to an empty document to avoid\n                   elements being stripped by the parser */\n                body = _initDocument('<!---->');\n                importedNode = body.ownerDocument.importNode(dirty, true);\n                if (importedNode.nodeType === 1 && importedNode.nodeName === 'BODY') {\n                    /* Node is already a body, use as is */\n                    body = importedNode;\n                }\n                else if (importedNode.nodeName === 'HTML') {\n                    body = importedNode;\n                }\n                else {\n                    // eslint-disable-next-line unicorn/prefer-dom-node-append\n                    body.appendChild(importedNode);\n                }\n            }\n            else {\n                /* Exit directly if we have nothing to do */\n                if (!RETURN_DOM && !SAFE_FOR_TEMPLATES && !WHOLE_DOCUMENT &&\n                    // eslint-disable-next-line unicorn/prefer-includes\n                    dirty.indexOf('<') === -1) {\n                    return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(dirty) : dirty;\n                }\n                /* Initialize the document to work on */\n                body = _initDocument(dirty);\n                /* Check we have a DOM node from the data */\n                if (!body) {\n                    return RETURN_DOM ? null : RETURN_TRUSTED_TYPE ? emptyHTML : '';\n                }\n            }\n            /* Remove first element node (ours) if FORCE_BODY is set */\n            if (body && FORCE_BODY) {\n                _forceRemove(body.firstChild);\n            }\n            /* Get node iterator */\n            const nodeIterator = _createNodeIterator(IN_PLACE ? dirty : body);\n            /* Now start iterating over the created document */\n            while (currentNode = nodeIterator.nextNode()) {\n                /* Sanitize tags and elements */\n                if (_sanitizeElements(currentNode)) {\n                    continue;\n                }\n                /* Shadow DOM detected, sanitize it */\n                if (currentNode.content instanceof DocumentFragment) {\n                    _sanitizeShadowDOM(currentNode.content);\n                }\n                /* Check attributes, sanitize if necessary */\n                _sanitizeAttributes(currentNode);\n            }\n            /* If we sanitized `dirty` in-place, return it. */\n            if (IN_PLACE) {\n                return dirty;\n            }\n            /* Return sanitized string or DOM */\n            if (RETURN_DOM) {\n                if (RETURN_DOM_FRAGMENT) {\n                    returnNode = createDocumentFragment.call(body.ownerDocument);\n                    while (body.firstChild) {\n                        // eslint-disable-next-line unicorn/prefer-dom-node-append\n                        returnNode.appendChild(body.firstChild);\n                    }\n                }\n                else {\n                    returnNode = body;\n                }\n                if (ALLOWED_ATTR.shadowroot || ALLOWED_ATTR.shadowrootmode) {\n                    /*\n                      AdoptNode() is not used because internal state is not reset\n                      (e.g. the past names map of a HTMLFormElement), this is safe\n                      in theory but we would rather not risk another attack vector.\n                      The state that is cloned by importNode() is explicitly defined\n                      by the specs.\n                    */\n                    returnNode = importNode.call(originalDocument, returnNode, true);\n                }\n                return returnNode;\n            }\n            let serializedHTML = WHOLE_DOCUMENT ? body.outerHTML : body.innerHTML;\n            /* Serialize doctype if allowed */\n            if (WHOLE_DOCUMENT && ALLOWED_TAGS['!doctype'] && body.ownerDocument && body.ownerDocument.doctype && body.ownerDocument.doctype.name && regExpTest(DOCTYPE_NAME, body.ownerDocument.doctype.name)) {\n                serializedHTML = '<!DOCTYPE ' + body.ownerDocument.doctype.name + '>\\n' + serializedHTML;\n            }\n            /* Sanitize final string template-safe */\n            if (SAFE_FOR_TEMPLATES) {\n                arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], expr => {\n                    serializedHTML = stringReplace(serializedHTML, expr, ' ');\n                });\n            }\n            return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(serializedHTML) : serializedHTML;\n        };\n        /**\n         * Public method to set the configuration once\n         * setConfig\n         *\n         * @param {Object} cfg configuration object\n         */\n        DOMPurify.setConfig = function () {\n            let cfg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n            _parseConfig(cfg);\n            SET_CONFIG = true;\n        };\n        /**\n         * Public method to remove the configuration\n         * clearConfig\n         *\n         */\n        DOMPurify.clearConfig = function () {\n            CONFIG = null;\n            SET_CONFIG = false;\n        };\n        /**\n         * Public method to check if an attribute value is valid.\n         * Uses last set config, if any. Otherwise, uses config defaults.\n         * isValidAttribute\n         *\n         * @param  {String} tag Tag name of containing element.\n         * @param  {String} attr Attribute name.\n         * @param  {String} value Attribute value.\n         * @return {Boolean} Returns true if `value` is valid. Otherwise, returns false.\n         */\n        DOMPurify.isValidAttribute = function (tag, attr, value) {\n            /* Initialize shared config vars if necessary. */\n            if (!CONFIG) {\n                _parseConfig({});\n            }\n            const lcTag = transformCaseFunc(tag);\n            const lcName = transformCaseFunc(attr);\n            return _isValidAttribute(lcTag, lcName, value);\n        };\n        /**\n         * AddHook\n         * Public method to add DOMPurify hooks\n         *\n         * @param {String} entryPoint entry point for the hook to add\n         * @param {Function} hookFunction function to execute\n         */\n        DOMPurify.addHook = function (entryPoint, hookFunction) {\n            if (typeof hookFunction !== 'function') {\n                return;\n            }\n            hooks[entryPoint] = hooks[entryPoint] || [];\n            arrayPush(hooks[entryPoint], hookFunction);\n        };\n        /**\n         * RemoveHook\n         * Public method to remove a DOMPurify hook at a given entryPoint\n         * (pops it from the stack of hooks if more are present)\n         *\n         * @param {String} entryPoint entry point for the hook to remove\n         * @return {Function} removed(popped) hook\n         */\n        DOMPurify.removeHook = function (entryPoint) {\n            if (hooks[entryPoint]) {\n                return arrayPop(hooks[entryPoint]);\n            }\n        };\n        /**\n         * RemoveHooks\n         * Public method to remove all DOMPurify hooks at a given entryPoint\n         *\n         * @param  {String} entryPoint entry point for the hooks to remove\n         */\n        DOMPurify.removeHooks = function (entryPoint) {\n            if (hooks[entryPoint]) {\n                hooks[entryPoint] = [];\n            }\n        };\n        /**\n         * RemoveAllHooks\n         * Public method to remove all DOMPurify hooks\n         */\n        DOMPurify.removeAllHooks = function () {\n            hooks = {};\n        };\n        return DOMPurify;\n    }\n    var purify = createDOMPurify();\n    return purify;\n}));\n\n\n\n//# sourceURL=webpack://new-reddit/./node_modules/dompurify/dist/purify.js?");

/***/ }),

/***/ "./src/hooks/useCommentsPostData.ts":
/*!******************************************!*\
  !*** ./src/hooks/useCommentsPostData.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useModalCommentsData: () => (/* binding */ useModalCommentsData)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-redux */ \"./node_modules/react-redux/es/index.js\");\n/* harmony import */ var _storeRedux_comments_commentsAsyncThunk__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../storeRedux/comments/commentsAsyncThunk */ \"./src/storeRedux/comments/commentsAsyncThunk.ts\");\n/* harmony import */ var _storeRedux_storeSelectors__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../storeRedux/storeSelectors */ \"./src/storeRedux/storeSelectors.ts\");\n\n\n\n\nfunction useModalCommentsData(postSubreddit, postId) {\n    const dispatch = (0,react_redux__WEBPACK_IMPORTED_MODULE_1__.useDispatch)();\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n        dispatch((0,_storeRedux_comments_commentsAsyncThunk__WEBPACK_IMPORTED_MODULE_2__.commentsAsyncThunk)(postSubreddit, postId));\n    }, []);\n    const commentsList = (0,_storeRedux_storeSelectors__WEBPACK_IMPORTED_MODULE_3__.useAppSelector)(_storeRedux_storeSelectors__WEBPACK_IMPORTED_MODULE_3__.selectComments);\n    const modalData = (0,_storeRedux_storeSelectors__WEBPACK_IMPORTED_MODULE_3__.useAppSelector)(_storeRedux_storeSelectors__WEBPACK_IMPORTED_MODULE_3__.selectCardModalData);\n    return { commentsList, modalData };\n}\n\n\n//# sourceURL=webpack://new-reddit/./src/hooks/useCommentsPostData.ts?");

/***/ }),

/***/ "./src/hooks/useMoreComments.ts":
/*!**************************************!*\
  !*** ./src/hooks/useMoreComments.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useMoreComments: () => (/* binding */ useMoreComments)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! axios */ \"./node_modules/axios/lib/axios.js\");\n\n\nlet count = 0;\nfunction useMoreComments({ commentsData, postId }) {\n    const [moreComments, setMoreCommentsData] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)();\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n        let isUnmount = false;\n        const timer = setTimeout(() => {\n            axios__WEBPACK_IMPORTED_MODULE_1__[\"default\"].get(`http://oauth.reddit.com/api/morechildren?link_id=t3_${postId}&children=${commentsData}&api_type=json`)\n                .then((response) => {\n                if (!isUnmount && response.data.json.data) {\n                    const comments = response.data.json.data.things;\n                    setMoreCommentsData(comments.filter((commentItem) => commentItem.data.contentHTML &&\n                        commentItem.data.contentHTML !== '[удалено]' &&\n                        commentItem.data.contentHTML !== '[deleted]')\n                        .map((commentItem) => {\n                        const comment = commentItem.data;\n                        const indexStartName = comment.content\n                            .indexOf('data-author=\"') + 13;\n                        const indexEndName = comment.content\n                            .substring(indexStartName)\n                            .indexOf('\"') + indexStartName;\n                        const authorName = comment.content\n                            .substring(indexStartName, indexEndName);\n                        const indexStartTime = comment.content\n                            .indexOf('live-timestamp') + 19;\n                        const indexEndTime = comment.content\n                            .substring(indexStartTime)\n                            .indexOf('&') + indexStartTime;\n                        const createdAt = comment.content\n                            .substring(indexStartTime, indexEndTime)\n                            .trim()\n                            .replace('мин назад', 'min. ago')\n                            .replace('ч назад', 'hr. ago');\n                        const indexStartScore = comment.content\n                            .indexOf('\"score unvoted\" title=\"') + 23;\n                        const indexEndScore = comment.content\n                            .substring(indexStartScore)\n                            .indexOf('\"') + indexStartScore;\n                        const score = comment.content\n                            .substring(indexStartScore, indexEndScore);\n                        return {\n                            postId: postId,\n                            commentId: comment.id,\n                            authorName: authorName,\n                            createdTime: createdAt,\n                            commentText: comment.contentText,\n                            commentHtml: comment.contentHTML,\n                            karmaCounter: score,\n                        };\n                    }));\n                }\n            })\n                .catch(console.log);\n        }, count++ * 300);\n        return () => {\n            clearTimeout(timer);\n            isUnmount = true;\n            count = 0;\n        };\n    }, [commentsData]);\n    return [moreComments];\n}\n\n\n//# sourceURL=webpack://new-reddit/./src/hooks/useMoreComments.ts?");

/***/ }),

/***/ "./src/hooks/useStopScroll.ts":
/*!************************************!*\
  !*** ./src/hooks/useStopScroll.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useStopScroll: () => (/* binding */ useStopScroll)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n\nfunction useStopScroll(props) {\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n        const page = document.body;\n        props\n            ? page.style.overflow = 'hidden'\n            : page.style.overflow = '';\n        !page.style.length && page.removeAttribute('style');\n    }, [props]);\n}\n\n\n//# sourceURL=webpack://new-reddit/./src/hooks/useStopScroll.ts?");

/***/ }),

/***/ "./src/shared/CardsList/Card/CardModal/CardModal.tsx":
/*!***********************************************************!*\
  !*** ./src/shared/CardsList/Card/CardModal/CardModal.tsx ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CardModal: () => (/* binding */ CardModal)\n/* harmony export */ });\n/* harmony import */ var dompurify__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! dompurify */ \"./node_modules/dompurify/dist/purify.js\");\n/* harmony import */ var dompurify__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(dompurify__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _cardmodal_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./cardmodal.css */ \"./src/shared/CardsList/Card/CardModal/cardmodal.css\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-dom */ \"./node_modules/@hot-loader/react-dom/index.js\");\n/* harmony import */ var _CardVisual__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../CardVisual */ \"./src/shared/CardsList/Card/CardVisual/index.ts\");\n/* harmony import */ var react_router_dom__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! react-router-dom */ \"./node_modules/react-router/dist/index.js\");\n/* harmony import */ var _ModalSortBlock__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./ModalSortBlock */ \"./src/shared/CardsList/Card/CardModal/ModalSortBlock/index.ts\");\n/* harmony import */ var _utils_react_Text__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../utils/react/Text */ \"./src/utils/react/Text.tsx\");\n/* harmony import */ var _CardTextContent_UserLink__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../CardTextContent/UserLink */ \"./src/shared/CardsList/Card/CardTextContent/UserLink/index.ts\");\n/* harmony import */ var _ModalControlPanel__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./ModalControlPanel */ \"./src/shared/CardsList/Card/CardModal/ModalControlPanel/index.ts\");\n/* harmony import */ var _ModalCommentsForm__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./ModalCommentsForm */ \"./src/shared/CardsList/Card/CardModal/ModalCommentsForm/index.ts\");\n/* harmony import */ var _ModalCommentsList__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./ModalCommentsList */ \"./src/shared/CardsList/Card/CardModal/ModalCommentsList/index.ts\");\n/* harmony import */ var _BackToTopButton__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../BackToTopButton */ \"./src/shared/CardsList/BackToTopButton/index.ts\");\n/* harmony import */ var _CardTextContent_CreatedAd__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../CardTextContent/CreatedAd */ \"./src/shared/CardsList/Card/CardTextContent/CreatedAd/index.ts\");\n/* harmony import */ var _ModalButtonCloserX__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./ModalButtonCloserX */ \"./src/shared/CardsList/Card/CardModal/ModalButtonCloserX/index.ts\");\n/* harmony import */ var _MoreCommentsButton__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./MoreCommentsButton */ \"./src/shared/CardsList/Card/CardModal/MoreCommentsButton/index.ts\");\n/* harmony import */ var _CardControls_KarmaCounter__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../CardControls/KarmaCounter */ \"./src/shared/CardsList/Card/CardControls/KarmaCounter/index.ts\");\n/* harmony import */ var _Loader_RedditLoader__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../../../Loader/RedditLoader */ \"./src/Loader/RedditLoader/index.ts\");\n/* harmony import */ var _hooks_useModalCloser__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../../../../hooks/useModalCloser */ \"./src/hooks/useModalCloser.ts\");\n/* harmony import */ var _CardTextContent_CardTitlePostLink__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../CardTextContent/CardTitlePostLink */ \"./src/shared/CardsList/Card/CardTextContent/CardTitlePostLink/index.ts\");\n/* harmony import */ var _hooks_useCommentsPostData__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../../../../hooks/useCommentsPostData */ \"./src/hooks/useCommentsPostData.ts\");\n/* harmony import */ var _utils_ts_convertRedditTextHtml__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../../../../utils/ts/convertRedditTextHtml */ \"./src/utils/ts/convertRedditTextHtml.ts\");\n/* harmony import */ var _hooks_useStopScroll__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../../../../hooks/useStopScroll */ \"./src/hooks/useStopScroll.ts\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction CardModal() {\n    const modalRoot = document.querySelector('#modal_root');\n    const { postId, subreddit } = (0,react_router_dom__WEBPACK_IMPORTED_MODULE_22__.useParams)();\n    if (!modalRoot || !subreddit || !postId)\n        return null;\n    const { commentsList: { comments, moreComments, loading }, modalData: { postHint, postThumbnail, postText, karmaNumber, postTitle, postUrl, createdTime, anchorName, postVideoUrl, postHighQualityVideoUrl, numberComments } } = (0,_hooks_useCommentsPostData__WEBPACK_IMPORTED_MODULE_19__.useModalCommentsData)(subreddit, postId);\n    const refModal = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(null);\n    const refButtonToTop = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(null);\n    const scrollToTop = () => refModal.current && refModal.current.scrollTo({ top: 0 });\n    const navigate = (0,react_router_dom__WEBPACK_IMPORTED_MODULE_22__.useNavigate)();\n    const onClose = () => navigate(-1);\n    (0,_hooks_useModalCloser__WEBPACK_IMPORTED_MODULE_17__.useModalCloser)({\n        onClose: onClose,\n        ref: refModal,\n        ref2: refButtonToTop,\n        timeDelay: 20\n    });\n    const [scroll, setScroll] = useState;\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(() => {\n        (0,_hooks_useStopScroll__WEBPACK_IMPORTED_MODULE_21__.useStopScroll)(true);\n    }, []);\n    return (0,react_dom__WEBPACK_IMPORTED_MODULE_3__.createPortal)((react__WEBPACK_IMPORTED_MODULE_2__.createElement(\"div\", { className: _cardmodal_css__WEBPACK_IMPORTED_MODULE_1__[\"default\"].modal },\n        react__WEBPACK_IMPORTED_MODULE_2__.createElement(_BackToTopButton__WEBPACK_IMPORTED_MODULE_11__.BackToTopButton, { ref: refButtonToTop, className: _cardmodal_css__WEBPACK_IMPORTED_MODULE_1__[\"default\"].buttonBackToTop, onClick: scrollToTop }),\n        react__WEBPACK_IMPORTED_MODULE_2__.createElement(\"div\", { className: _cardmodal_css__WEBPACK_IMPORTED_MODULE_1__[\"default\"].container, ref: refModal },\n            react__WEBPACK_IMPORTED_MODULE_2__.createElement(_ModalButtonCloserX__WEBPACK_IMPORTED_MODULE_13__.ModalButtonCloserX, { className: _cardmodal_css__WEBPACK_IMPORTED_MODULE_1__[\"default\"].buttonCloserX, onClose: onClose }),\n            !postTitle && loading\n                ?\n                    react__WEBPACK_IMPORTED_MODULE_2__.createElement(_Loader_RedditLoader__WEBPACK_IMPORTED_MODULE_16__.RedditLoader, { className: _cardmodal_css__WEBPACK_IMPORTED_MODULE_1__[\"default\"].loader })\n                :\n                    react__WEBPACK_IMPORTED_MODULE_2__.createElement(react__WEBPACK_IMPORTED_MODULE_2__.Fragment, null,\n                        react__WEBPACK_IMPORTED_MODULE_2__.createElement(\"div\", { className: _cardmodal_css__WEBPACK_IMPORTED_MODULE_1__[\"default\"].header },\n                            react__WEBPACK_IMPORTED_MODULE_2__.createElement(_CardControls_KarmaCounter__WEBPACK_IMPORTED_MODULE_15__.KarmaCounter, { className: _cardmodal_css__WEBPACK_IMPORTED_MODULE_1__[\"default\"].karmaCounter, carmaNumber: karmaNumber }),\n                            react__WEBPACK_IMPORTED_MODULE_2__.createElement(\"div\", { className: _cardmodal_css__WEBPACK_IMPORTED_MODULE_1__[\"default\"].popupHeaderWrapper },\n                                react__WEBPACK_IMPORTED_MODULE_2__.createElement(_CardTextContent_CardTitlePostLink__WEBPACK_IMPORTED_MODULE_18__.CardTitlePostLink, { postTitle: postTitle, postUrl: postUrl }),\n                                react__WEBPACK_IMPORTED_MODULE_2__.createElement(\"div\", { className: _cardmodal_css__WEBPACK_IMPORTED_MODULE_1__[\"default\"].popupMediaUser },\n                                    react__WEBPACK_IMPORTED_MODULE_2__.createElement(_CardTextContent_CreatedAd__WEBPACK_IMPORTED_MODULE_12__.CreatedAd, { createdTime: createdTime }),\n                                    react__WEBPACK_IMPORTED_MODULE_2__.createElement(_CardTextContent_UserLink__WEBPACK_IMPORTED_MODULE_7__.UserLink, { anchorName: anchorName })))),\n                        postHint !== undefined &&\n                            postThumbnail &&\n                            postThumbnail !== \"self\" &&\n                            postThumbnail !== \"default\" &&\n                            react__WEBPACK_IMPORTED_MODULE_2__.createElement(_CardVisual__WEBPACK_IMPORTED_MODULE_4__.CardVisual, { className: _cardmodal_css__WEBPACK_IMPORTED_MODULE_1__[\"default\"].preview, props: {\n                                    postThumbnail,\n                                    postVideoUrl,\n                                    postUrl,\n                                    postHighQualityVideoUrl,\n                                    postHint\n                                } }),\n                        postText &&\n                            react__WEBPACK_IMPORTED_MODULE_2__.createElement(_utils_react_Text__WEBPACK_IMPORTED_MODULE_6__.Text, { As: \"div\", size: 14, mobileSize: 12, className: _cardmodal_css__WEBPACK_IMPORTED_MODULE_1__[\"default\"].textContent, dangerouslySetInnerHTML: {\n                                    __html: dompurify__WEBPACK_IMPORTED_MODULE_0___default().sanitize((0,_utils_ts_convertRedditTextHtml__WEBPACK_IMPORTED_MODULE_20__.convertRedditTextHtml)(postText))\n                                } }),\n                        react__WEBPACK_IMPORTED_MODULE_2__.createElement(\"div\", { className: _cardmodal_css__WEBPACK_IMPORTED_MODULE_1__[\"default\"].footer, id: \"footer_root\" },\n                            react__WEBPACK_IMPORTED_MODULE_2__.createElement(_ModalControlPanel__WEBPACK_IMPORTED_MODULE_8__.ModalControlPanel, { props: numberComments }),\n                            react__WEBPACK_IMPORTED_MODULE_2__.createElement(_ModalCommentsForm__WEBPACK_IMPORTED_MODULE_9__.ModalCommentsForm, { rootId: \"footer_root\", commentId: \"modalFormComment\" }),\n                            react__WEBPACK_IMPORTED_MODULE_2__.createElement(_ModalSortBlock__WEBPACK_IMPORTED_MODULE_5__.ModalSortBlock, null)),\n                        react__WEBPACK_IMPORTED_MODULE_2__.createElement(\"div\", { className: _cardmodal_css__WEBPACK_IMPORTED_MODULE_1__[\"default\"].commentsBlock, id: \"comments_root\" },\n                            react__WEBPACK_IMPORTED_MODULE_2__.createElement(_ModalCommentsList__WEBPACK_IMPORTED_MODULE_10__.ModalCommentsList, { commentsData: comments, loading: loading }),\n                            react__WEBPACK_IMPORTED_MODULE_2__.createElement(_MoreCommentsButton__WEBPACK_IMPORTED_MODULE_14__.MoreCommentsButton, { postId: postId, moreCommentsData: moreComments })))))), modalRoot);\n}\n\n\n//# sourceURL=webpack://new-reddit/./src/shared/CardsList/Card/CardModal/CardModal.tsx?");

/***/ }),

/***/ "./src/shared/CardsList/Card/CardModal/ModalButtonCloserX/ModalButtonCloserX.tsx":
/*!***************************************************************************************!*\
  !*** ./src/shared/CardsList/Card/CardModal/ModalButtonCloserX/ModalButtonCloserX.tsx ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ModalButtonCloserX: () => (/* binding */ ModalButtonCloserX)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var _Icons__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../Icons */ \"./src/shared/Icons/index.ts\");\n\n\nfunction ModalButtonCloserX({ onClose, className }) {\n    return (react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"button\", { className: className, onClick: onClose },\n        react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Icons__WEBPACK_IMPORTED_MODULE_1__.IconX, null)));\n}\n\n\n//# sourceURL=webpack://new-reddit/./src/shared/CardsList/Card/CardModal/ModalButtonCloserX/ModalButtonCloserX.tsx?");

/***/ }),

/***/ "./src/shared/CardsList/Card/CardModal/ModalButtonCloserX/index.ts":
/*!*************************************************************************!*\
  !*** ./src/shared/CardsList/Card/CardModal/ModalButtonCloserX/index.ts ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ModalButtonCloserX: () => (/* reexport safe */ _ModalButtonCloserX__WEBPACK_IMPORTED_MODULE_0__.ModalButtonCloserX)\n/* harmony export */ });\n/* harmony import */ var _ModalButtonCloserX__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ModalButtonCloserX */ \"./src/shared/CardsList/Card/CardModal/ModalButtonCloserX/ModalButtonCloserX.tsx\");\n\n\n\n//# sourceURL=webpack://new-reddit/./src/shared/CardsList/Card/CardModal/ModalButtonCloserX/index.ts?");

/***/ }),

/***/ "./src/shared/CardsList/Card/CardModal/ModalCommentsForm/MenuFormButtonControls/MenuFormBtnsDropdown/MenuFormBtnsDropdown.tsx":
/*!************************************************************************************************************************************!*\
  !*** ./src/shared/CardsList/Card/CardModal/ModalCommentsForm/MenuFormButtonControls/MenuFormBtnsDropdown/MenuFormBtnsDropdown.tsx ***!
  \************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MenuFormBtnsDropdown: () => (/* binding */ MenuFormBtnsDropdown)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var _menuFormBtnsDropdown_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./menuFormBtnsDropdown.css */ \"./src/shared/CardsList/Card/CardModal/ModalCommentsForm/MenuFormButtonControls/MenuFormBtnsDropdown/menuFormBtnsDropdown.css\");\n/* harmony import */ var _hooks_useModalCloser__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../../../hooks/useModalCloser */ \"./src/hooks/useModalCloser.ts\");\n/* harmony import */ var _utils_react_GenericList__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../../../../utils/react/GenericList */ \"./src/utils/react/GenericList.tsx\");\n/* harmony import */ var _utils_ts_generateRandomIndex__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../../../../utils/ts/generateRandomIndex */ \"./src/utils/ts/generateRandomIndex.ts\");\n/* harmony import */ var _Icons__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../../../Icons */ \"./src/shared/Icons/index.ts\");\n/* harmony import */ var _hooks_useResizeCloser__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../../../../hooks/useResizeCloser */ \"./src/hooks/useResizeCloser.ts\");\n\n\n\n\n\n\n\nfunction MenuFormBtnsDropdown({ className, onClose, props, style }) {\n    const $FormBtnsDropdown = [\n        { item: !(props === null || props === void 0 ? void 0 : props.maxWidth800) && react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Icons__WEBPACK_IMPORTED_MODULE_5__.IconPicture, null) },\n        { item: !(props === null || props === void 0 ? void 0 : props.maxWidth753) && react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Icons__WEBPACK_IMPORTED_MODULE_5__.IconFile, null) },\n        { item: !(props === null || props === void 0 ? void 0 : props.maxWidth706) && react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Icons__WEBPACK_IMPORTED_MODULE_5__.IconDownload, null) },\n        { item: !(props === null || props === void 0 ? void 0 : props.maxWidth659) && react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Icons__WEBPACK_IMPORTED_MODULE_5__.IconUser, null) },\n        { item: !(props === null || props === void 0 ? void 0 : props.maxWidth612) && react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Icons__WEBPACK_IMPORTED_MODULE_5__.IconReverse, null) },\n        { item: !(props === null || props === void 0 ? void 0 : props.maxWidth565) && react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Icons__WEBPACK_IMPORTED_MODULE_5__.IconShareForm, null) },\n        { item: !(props === null || props === void 0 ? void 0 : props.maxWidth518) && react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Icons__WEBPACK_IMPORTED_MODULE_5__.IconRecord, null) },\n        { item: !(props === null || props === void 0 ? void 0 : props.maxWidth471) && react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Icons__WEBPACK_IMPORTED_MODULE_5__.IconMessage, null) },\n        { item: !(props === null || props === void 0 ? void 0 : props.maxWidth424) && react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Icons__WEBPACK_IMPORTED_MODULE_5__.IconPencil, null) },\n        { item: !(props === null || props === void 0 ? void 0 : props.maxWidth377) && react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Icons__WEBPACK_IMPORTED_MODULE_5__.IconWord, null) },\n        { item: !(props === null || props === void 0 ? void 0 : props.maxWidth330) && react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Icons__WEBPACK_IMPORTED_MODULE_5__.IconPdf, null) },\n    ].filter(item => item.item).map(_utils_ts_generateRandomIndex__WEBPACK_IMPORTED_MODULE_4__.generateId);\n    (0,_hooks_useModalCloser__WEBPACK_IMPORTED_MODULE_2__.useModalCloser)({ onClose });\n    (0,_hooks_useResizeCloser__WEBPACK_IMPORTED_MODULE_6__.useResizeCloser)(onClose);\n    return (react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"ul\", { className: _menuFormBtnsDropdown_css__WEBPACK_IMPORTED_MODULE_1__[\"default\"].list, style: style },\n        react__WEBPACK_IMPORTED_MODULE_0__.createElement(_utils_react_GenericList__WEBPACK_IMPORTED_MODULE_3__.GenericList, { As: 'button', className: className, list: $FormBtnsDropdown })));\n}\n\n\n//# sourceURL=webpack://new-reddit/./src/shared/CardsList/Card/CardModal/ModalCommentsForm/MenuFormButtonControls/MenuFormBtnsDropdown/MenuFormBtnsDropdown.tsx?");

/***/ }),

/***/ "./src/shared/CardsList/Card/CardModal/ModalCommentsForm/MenuFormButtonControls/MenuFormBtnsDropdown/index.ts":
/*!********************************************************************************************************************!*\
  !*** ./src/shared/CardsList/Card/CardModal/ModalCommentsForm/MenuFormButtonControls/MenuFormBtnsDropdown/index.ts ***!
  \********************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MenuFormBtnsDropdown: () => (/* reexport safe */ _MenuFormBtnsDropdown__WEBPACK_IMPORTED_MODULE_0__.MenuFormBtnsDropdown)\n/* harmony export */ });\n/* harmony import */ var _MenuFormBtnsDropdown__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./MenuFormBtnsDropdown */ \"./src/shared/CardsList/Card/CardModal/ModalCommentsForm/MenuFormButtonControls/MenuFormBtnsDropdown/MenuFormBtnsDropdown.tsx\");\n\n\n\n//# sourceURL=webpack://new-reddit/./src/shared/CardsList/Card/CardModal/ModalCommentsForm/MenuFormButtonControls/MenuFormBtnsDropdown/index.ts?");

/***/ }),

/***/ "./src/shared/CardsList/Card/CardModal/ModalCommentsForm/MenuFormButtonControls/MenuFormButtonControls.tsx":
/*!*****************************************************************************************************************!*\
  !*** ./src/shared/CardsList/Card/CardModal/ModalCommentsForm/MenuFormButtonControls/MenuFormButtonControls.tsx ***!
  \*****************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MenuFormButtonControls: () => (/* binding */ MenuFormButtonControls)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var _Icons__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../Icons */ \"./src/shared/Icons/index.ts\");\n/* harmony import */ var _MenuFormBtnsDropdown__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./MenuFormBtnsDropdown */ \"./src/shared/CardsList/Card/CardModal/ModalCommentsForm/MenuFormButtonControls/MenuFormBtnsDropdown/index.ts\");\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-dom */ \"./node_modules/@hot-loader/react-dom/index.js\");\n/* harmony import */ var _hooks_useCoords__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../../../hooks/useCoords */ \"./src/hooks/useCoords.ts\");\n\n\n\n\n\nconst MenuFormButtonControls = (0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(({ className, props, rootId }, ref) => {\n    const buttonsRoot = document.getElementById(rootId);\n    if (!buttonsRoot)\n        return null;\n    const [isBtnsDropdownOpen, setBtnDropdownOpen] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const [coords] = (0,_hooks_useCoords__WEBPACK_IMPORTED_MODULE_4__.useCoords)(ref, isBtnsDropdownOpen);\n    return (react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null,\n        react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"button\", { className: className, onClick: () => setBtnDropdownOpen(true) },\n            react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Icons__WEBPACK_IMPORTED_MODULE_1__.IconMenu, null)),\n        isBtnsDropdownOpen &&\n            (0,react_dom__WEBPACK_IMPORTED_MODULE_3__.createPortal)(react__WEBPACK_IMPORTED_MODULE_0__.createElement(_MenuFormBtnsDropdown__WEBPACK_IMPORTED_MODULE_2__.MenuFormBtnsDropdown, { style: {\n                    left: (coords === null || coords === void 0 ? void 0 : coords.left) + 'px',\n                    top: (coords === null || coords === void 0 ? void 0 : coords.top) + 'px',\n                }, className: className, onClose: () => setBtnDropdownOpen(false), props: props }), buttonsRoot)));\n});\n\n\n//# sourceURL=webpack://new-reddit/./src/shared/CardsList/Card/CardModal/ModalCommentsForm/MenuFormButtonControls/MenuFormButtonControls.tsx?");

/***/ }),

/***/ "./src/shared/CardsList/Card/CardModal/ModalCommentsForm/MenuFormButtonControls/index.ts":
/*!***********************************************************************************************!*\
  !*** ./src/shared/CardsList/Card/CardModal/ModalCommentsForm/MenuFormButtonControls/index.ts ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MenuFormButtonControls: () => (/* reexport safe */ _MenuFormButtonControls__WEBPACK_IMPORTED_MODULE_0__.MenuFormButtonControls)\n/* harmony export */ });\n/* harmony import */ var _MenuFormButtonControls__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./MenuFormButtonControls */ \"./src/shared/CardsList/Card/CardModal/ModalCommentsForm/MenuFormButtonControls/MenuFormButtonControls.tsx\");\n\n\n\n//# sourceURL=webpack://new-reddit/./src/shared/CardsList/Card/CardModal/ModalCommentsForm/MenuFormButtonControls/index.ts?");

/***/ }),

/***/ "./src/shared/CardsList/Card/CardModal/ModalCommentsForm/ModalCommentsForm.tsx":
/*!*************************************************************************************!*\
  !*** ./src/shared/CardsList/Card/CardModal/ModalCommentsForm/ModalCommentsForm.tsx ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ModalCommentsForm: () => (/* binding */ ModalCommentsForm)\n/* harmony export */ });\n/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react-redux */ \"./node_modules/react-redux/es/index.js\");\n/* harmony import */ var _modalCommentsForm_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./modalCommentsForm.css */ \"./src/shared/CardsList/Card/CardModal/ModalCommentsForm/modalCommentsForm.css\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var _utils_react_Text__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../../utils/react/Text */ \"./src/utils/react/Text.tsx\");\n/* harmony import */ var _MenuFormButtonControls__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./MenuFormButtonControls */ \"./src/shared/CardsList/Card/CardModal/ModalCommentsForm/MenuFormButtonControls/index.ts\");\n/* harmony import */ var _utils_react_GenericList__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../../utils/react/GenericList */ \"./src/utils/react/GenericList.tsx\");\n/* harmony import */ var _hooks_useAdaptiveForm__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../../hooks/useAdaptiveForm */ \"./src/hooks/useAdaptiveForm.ts\");\n/* harmony import */ var _utils_ts_generateRandomIndex__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../../utils/ts/generateRandomIndex */ \"./src/utils/ts/generateRandomIndex.ts\");\n/* harmony import */ var _storeRedux_form_actions__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../../storeRedux/form/actions */ \"./src/storeRedux/form/actions.ts\");\n/* harmony import */ var _storeRedux_storeSelectors__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../../../storeRedux/storeSelectors */ \"./src/storeRedux/storeSelectors.ts\");\n/* harmony import */ var _Icons__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../../Icons */ \"./src/shared/Icons/index.ts\");\n\n\n\n\n\n\n\n\n\n\n\nfunction ModalCommentsForm({ rootId, authorName, commentId, onClose, cancelBtn, className }) {\n    const commentFormValue = (0,_storeRedux_storeSelectors__WEBPACK_IMPORTED_MODULE_9__.useAppSelector)((0,_storeRedux_storeSelectors__WEBPACK_IMPORTED_MODULE_9__.selectCommentFormValue)(commentId));\n    const { name } = (0,_storeRedux_storeSelectors__WEBPACK_IMPORTED_MODULE_9__.useAppSelector)(_storeRedux_storeSelectors__WEBPACK_IMPORTED_MODULE_9__.selectUserBlock);\n    const formRef = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(null);\n    const [isWidth] = (0,_hooks_useAdaptiveForm__WEBPACK_IMPORTED_MODULE_6__.useAdaptiveForm)(formRef);\n    const $FormBtns = [\n        { item: isWidth.maxWidth800 && react__WEBPACK_IMPORTED_MODULE_2__.createElement(_Icons__WEBPACK_IMPORTED_MODULE_10__.IconPicture, null) },\n        { item: isWidth.maxWidth753 && react__WEBPACK_IMPORTED_MODULE_2__.createElement(_Icons__WEBPACK_IMPORTED_MODULE_10__.IconFile, null) },\n        { item: isWidth.maxWidth706 && react__WEBPACK_IMPORTED_MODULE_2__.createElement(_Icons__WEBPACK_IMPORTED_MODULE_10__.IconDownload, null) },\n        { item: isWidth.maxWidth659 && react__WEBPACK_IMPORTED_MODULE_2__.createElement(_Icons__WEBPACK_IMPORTED_MODULE_10__.IconUser, null) },\n        { item: isWidth.maxWidth612 && react__WEBPACK_IMPORTED_MODULE_2__.createElement(_Icons__WEBPACK_IMPORTED_MODULE_10__.IconReverse, null) },\n        { item: isWidth.maxWidth565 && react__WEBPACK_IMPORTED_MODULE_2__.createElement(_Icons__WEBPACK_IMPORTED_MODULE_10__.IconShareForm, null) },\n        { item: isWidth.maxWidth518 && react__WEBPACK_IMPORTED_MODULE_2__.createElement(_Icons__WEBPACK_IMPORTED_MODULE_10__.IconRecord, null) },\n        { item: isWidth.maxWidth471 && react__WEBPACK_IMPORTED_MODULE_2__.createElement(_Icons__WEBPACK_IMPORTED_MODULE_10__.IconMessage, null) },\n        { item: isWidth.maxWidth424 && react__WEBPACK_IMPORTED_MODULE_2__.createElement(_Icons__WEBPACK_IMPORTED_MODULE_10__.IconPencil, null) },\n        { item: isWidth.maxWidth377 && react__WEBPACK_IMPORTED_MODULE_2__.createElement(_Icons__WEBPACK_IMPORTED_MODULE_10__.IconWord, null) },\n        { item: isWidth.maxWidth330 && react__WEBPACK_IMPORTED_MODULE_2__.createElement(_Icons__WEBPACK_IMPORTED_MODULE_10__.IconPdf, null) },\n    ].filter(item => item.item).map(_utils_ts_generateRandomIndex__WEBPACK_IMPORTED_MODULE_7__.generateId);\n    const dispatch = (0,react_redux__WEBPACK_IMPORTED_MODULE_0__.useDispatch)();\n    const handleChangeForm = (event) => dispatch((0,_storeRedux_form_actions__WEBPACK_IMPORTED_MODULE_8__.changeFormValue)(commentId, event.target.value, authorName));\n    const handleFocus = (event) => event.currentTarget.setSelectionRange(event.currentTarget.value.length, event.currentTarget.value.length);\n    const handleSubmit = (event) => event.preventDefault();\n    const handleClose = () => setTimeout(() => onClose === null || onClose === void 0 ? void 0 : onClose(), 10);\n    return (react__WEBPACK_IMPORTED_MODULE_2__.createElement(\"form\", { className: `${_modalCommentsForm_css__WEBPACK_IMPORTED_MODULE_1__[\"default\"].form}${className ? ' ' + className : ''}`, onSubmit: handleSubmit, ref: formRef },\n        react__WEBPACK_IMPORTED_MODULE_2__.createElement(\"textarea\", { autoFocus: true, className: _modalCommentsForm_css__WEBPACK_IMPORTED_MODULE_1__[\"default\"].textarea, value: commentFormValue, onChange: handleChangeForm, onFocus: handleFocus }),\n        !commentFormValue &&\n            react__WEBPACK_IMPORTED_MODULE_2__.createElement(\"label\", { className: _modalCommentsForm_css__WEBPACK_IMPORTED_MODULE_1__[\"default\"].label },\n                name &&\n                    react__WEBPACK_IMPORTED_MODULE_2__.createElement(_utils_react_Text__WEBPACK_IMPORTED_MODULE_3__.Text, { size: 16, mobileSize: 14, color: _utils_react_Text__WEBPACK_IMPORTED_MODULE_3__.EColor.blew }, name),\n                name\n                    ?\n                        ', what are your thoughts?'\n                    :\n                        'Sign in to add a comment'),\n        react__WEBPACK_IMPORTED_MODULE_2__.createElement(\"div\", { className: _modalCommentsForm_css__WEBPACK_IMPORTED_MODULE_1__[\"default\"].buttonsWrapper },\n            !isWidth.maxWidth800 &&\n                react__WEBPACK_IMPORTED_MODULE_2__.createElement(_MenuFormButtonControls__WEBPACK_IMPORTED_MODULE_4__.MenuFormButtonControls, { className: _modalCommentsForm_css__WEBPACK_IMPORTED_MODULE_1__[\"default\"].item, props: isWidth, rootId: rootId, ref: formRef }),\n            react__WEBPACK_IMPORTED_MODULE_2__.createElement(_utils_react_GenericList__WEBPACK_IMPORTED_MODULE_5__.GenericList, { list: $FormBtns, As: 'button', className: _modalCommentsForm_css__WEBPACK_IMPORTED_MODULE_1__[\"default\"].item }),\n            cancelBtn &&\n                react__WEBPACK_IMPORTED_MODULE_2__.createElement(\"button\", { type: 'button', className: `${_modalCommentsForm_css__WEBPACK_IMPORTED_MODULE_1__[\"default\"].cancelBtn}${isWidth.maxWidth330\n                        ? ''\n                        : ' ' + _modalCommentsForm_css__WEBPACK_IMPORTED_MODULE_1__[\"default\"].btnSizeMobile} `, onClick: handleClose }, \"Cancel\"),\n            react__WEBPACK_IMPORTED_MODULE_2__.createElement(\"button\", { type: 'submit', className: `${_modalCommentsForm_css__WEBPACK_IMPORTED_MODULE_1__[\"default\"].submitButton}${isWidth.maxWidth330\n                    ? ''\n                    : ' ' + _modalCommentsForm_css__WEBPACK_IMPORTED_MODULE_1__[\"default\"].btnSizeMobile} `, disabled: (commentFormValue === null || commentFormValue === void 0 ? void 0 : commentFormValue.trim())\n                    ? false\n                    : true, style: (commentFormValue === null || commentFormValue === void 0 ? void 0 : commentFormValue.trim())\n                    ? { opacity: '1', cursor: 'pointer' }\n                    : { opacity: '.6', cursor: 'not-allowed' } }, \"Comment\"))));\n}\n\n\n//# sourceURL=webpack://new-reddit/./src/shared/CardsList/Card/CardModal/ModalCommentsForm/ModalCommentsForm.tsx?");

/***/ }),

/***/ "./src/shared/CardsList/Card/CardModal/ModalCommentsForm/index.ts":
/*!************************************************************************!*\
  !*** ./src/shared/CardsList/Card/CardModal/ModalCommentsForm/index.ts ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ModalCommentsForm: () => (/* reexport safe */ _ModalCommentsForm__WEBPACK_IMPORTED_MODULE_0__.ModalCommentsForm)\n/* harmony export */ });\n/* harmony import */ var _ModalCommentsForm__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ModalCommentsForm */ \"./src/shared/CardsList/Card/CardModal/ModalCommentsForm/ModalCommentsForm.tsx\");\n\n\n\n//# sourceURL=webpack://new-reddit/./src/shared/CardsList/Card/CardModal/ModalCommentsForm/index.ts?");

/***/ }),

/***/ "./src/shared/CardsList/Card/CardModal/ModalCommentsList/Comment/Comment.tsx":
/*!***********************************************************************************!*\
  !*** ./src/shared/CardsList/Card/CardModal/ModalCommentsList/Comment/Comment.tsx ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Comment: () => (/* binding */ Comment)\n/* harmony export */ });\n/* harmony import */ var _storeRedux_storeSelectors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../../storeRedux/storeSelectors */ \"./src/storeRedux/storeSelectors.ts\");\n/* harmony import */ var _utils_ts_convertRedditTextHtml__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../../utils/ts/convertRedditTextHtml */ \"./src/utils/ts/convertRedditTextHtml.ts\");\n/* harmony import */ var _utils_ts_commentsArrConverter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../../utils/ts/commentsArrConverter */ \"./src/utils/ts/commentsArrConverter.ts\");\n/* harmony import */ var _storeRedux_form_actions__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../../../storeRedux/form/actions */ \"./src/storeRedux/form/actions.ts\");\n/* harmony import */ var _storeRedux_storeRedux__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../../../storeRedux/storeRedux */ \"./src/storeRedux/storeRedux.tsx\");\n/* harmony import */ var _CardControls_KarmaCounter__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../CardControls/KarmaCounter */ \"./src/shared/CardsList/Card/CardControls/KarmaCounter/index.ts\");\n/* harmony import */ var _CardTextContent_CreatedAd__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../CardTextContent/CreatedAd */ \"./src/shared/CardsList/Card/CardTextContent/CreatedAd/index.ts\");\n/* harmony import */ var _MoreCommentsButton__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../MoreCommentsButton */ \"./src/shared/CardsList/Card/CardModal/MoreCommentsButton/index.ts\");\n/* harmony import */ var _CardTextContent_UserLink__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../CardTextContent/UserLink */ \"./src/shared/CardsList/Card/CardTextContent/UserLink/index.ts\");\n/* harmony import */ var _ModalCommentsForm__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../ModalCommentsForm */ \"./src/shared/CardsList/Card/CardModal/ModalCommentsForm/index.ts\");\n/* harmony import */ var _ShareCommentButton__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./ShareCommentButton */ \"./src/shared/CardsList/Card/CardModal/ModalCommentsList/Comment/ShareCommentButton/index.ts\");\n/* harmony import */ var _utils_react_Text__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../../../../../utils/react/Text */ \"./src/utils/react/Text.tsx\");\n/* harmony import */ var _ReplyCommentButton__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./ReplyCommentButton */ \"./src/shared/CardsList/Card/CardModal/ModalCommentsList/Comment/ReplyCommentButton/index.ts\");\n/* harmony import */ var _ModalCommentsList__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../ModalCommentsList */ \"./src/shared/CardsList/Card/CardModal/ModalCommentsList/ModalCommentsList.tsx\");\n/* harmony import */ var _MenuCommentButton__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./MenuCommentButton */ \"./src/shared/CardsList/Card/CardModal/ModalCommentsList/Comment/MenuCommentButton/index.ts\");\n/* harmony import */ var _Icons__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../../../../Icons */ \"./src/shared/Icons/index.ts\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! react-redux */ \"./node_modules/react-redux/es/index.js\");\n/* harmony import */ var _comment_css__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./comment.css */ \"./src/shared/CardsList/Card/CardModal/ModalCommentsList/Comment/comment.css\");\n/* harmony import */ var dompurify__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! dompurify */ \"./node_modules/dompurify/dist/purify.js\");\n/* harmony import */ var dompurify__WEBPACK_IMPORTED_MODULE_19___default = /*#__PURE__*/__webpack_require__.n(dompurify__WEBPACK_IMPORTED_MODULE_19__);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst Comment = (0,react__WEBPACK_IMPORTED_MODULE_16__.memo)(({ commentItemData }) => {\n    const { commentReplies, authorName, createdTime, commentHtml, karmaCounter, postId, commentId, moreCommentsData } = commentItemData;\n    const dispatch = (0,react_redux__WEBPACK_IMPORTED_MODULE_17__.useDispatch)();\n    const [isCommentOpen, setIsCommentOpen] = (0,react__WEBPACK_IMPORTED_MODULE_16__.useState)(true);\n    const handleHideCommentToggle = () => setTimeout(() => setIsCommentOpen(!isCommentOpen), 10);\n    const formIsOpen = (0,_storeRedux_storeSelectors__WEBPACK_IMPORTED_MODULE_0__.useAppSelector)((0,_storeRedux_storeSelectors__WEBPACK_IMPORTED_MODULE_0__.selectFormIsOpen)(commentId));\n    const setCloseAllCommentsForm = () => {\n        var _a;\n        return (_a = _storeRedux_storeRedux__WEBPACK_IMPORTED_MODULE_4__.storeRedux\n            .getState()) === null || _a === void 0 ? void 0 : _a.commentsForm.filter((comment) => comment.formIsOpen === true).map(comment => dispatch((0,_storeRedux_form_actions__WEBPACK_IMPORTED_MODULE_3__.setIsOpenComment)(comment.commentId, false)));\n    };\n    const setCloseCommentForm = () => dispatch((0,_storeRedux_form_actions__WEBPACK_IMPORTED_MODULE_3__.setIsOpenComment)(commentId, false));\n    const setOpenCommentForm = () => dispatch((0,_storeRedux_form_actions__WEBPACK_IMPORTED_MODULE_3__.setIsOpenComment)(commentId, true));\n    function handleToggleComments() {\n        if (formIsOpen)\n            return setCloseAllCommentsForm();\n        setOpenCommentForm();\n    }\n    return (react__WEBPACK_IMPORTED_MODULE_16__.createElement(\"li\", { className: _comment_css__WEBPACK_IMPORTED_MODULE_18__[\"default\"].container },\n        react__WEBPACK_IMPORTED_MODULE_16__.createElement(\"div\", { className: _comment_css__WEBPACK_IMPORTED_MODULE_18__[\"default\"].header, style: isCommentOpen\n                ? { transform: 'translateX(0)' }\n                : { transform: 'translateX(30px)' } },\n            !isCommentOpen &&\n                react__WEBPACK_IMPORTED_MODULE_16__.createElement(\"button\", { className: _comment_css__WEBPACK_IMPORTED_MODULE_18__[\"default\"].buttonOpen, onClick: handleHideCommentToggle },\n                    react__WEBPACK_IMPORTED_MODULE_16__.createElement(_Icons__WEBPACK_IMPORTED_MODULE_15__.IconSwitch, null)),\n            react__WEBPACK_IMPORTED_MODULE_16__.createElement(_CardTextContent_UserLink__WEBPACK_IMPORTED_MODULE_8__.UserLink, { className: _comment_css__WEBPACK_IMPORTED_MODULE_18__[\"default\"].userLinkAvatar, styleAvatar: _comment_css__WEBPACK_IMPORTED_MODULE_18__[\"default\"].styleAvatar, anchorName: authorName }),\n            react__WEBPACK_IMPORTED_MODULE_16__.createElement(_CardTextContent_CreatedAd__WEBPACK_IMPORTED_MODULE_6__.CreatedAd, { className: _comment_css__WEBPACK_IMPORTED_MODULE_18__[\"default\"].createdAd, createdTime: createdTime, noLabel: true })),\n        isCommentOpen &&\n            react__WEBPACK_IMPORTED_MODULE_16__.createElement(react__WEBPACK_IMPORTED_MODULE_16__.Fragment, null, authorName !== '[deleted]' &&\n                authorName !== ';div class=' &&\n                react__WEBPACK_IMPORTED_MODULE_16__.createElement(\"div\", { className: _comment_css__WEBPACK_IMPORTED_MODULE_18__[\"default\"].body },\n                    react__WEBPACK_IMPORTED_MODULE_16__.createElement(\"button\", { className: _comment_css__WEBPACK_IMPORTED_MODULE_18__[\"default\"].buttonLine, onClick: handleHideCommentToggle }),\n                    react__WEBPACK_IMPORTED_MODULE_16__.createElement(\"div\", { className: _comment_css__WEBPACK_IMPORTED_MODULE_18__[\"default\"].content },\n                        react__WEBPACK_IMPORTED_MODULE_16__.createElement(_utils_react_Text__WEBPACK_IMPORTED_MODULE_11__.Text, { As: \"div\", size: 14, mobileSize: 12, className: _comment_css__WEBPACK_IMPORTED_MODULE_18__[\"default\"].text, dangerouslySetInnerHTML: {\n                                __html: dompurify__WEBPACK_IMPORTED_MODULE_19___default().sanitize((0,_utils_ts_convertRedditTextHtml__WEBPACK_IMPORTED_MODULE_1__.convertRedditTextHtml)(commentHtml))\n                            } }),\n                        react__WEBPACK_IMPORTED_MODULE_16__.createElement(\"div\", { className: _comment_css__WEBPACK_IMPORTED_MODULE_18__[\"default\"].controlPanel },\n                            react__WEBPACK_IMPORTED_MODULE_16__.createElement(_CardControls_KarmaCounter__WEBPACK_IMPORTED_MODULE_5__.KarmaCounter, { className: _comment_css__WEBPACK_IMPORTED_MODULE_18__[\"default\"].karmaCounter, carmaNumber: karmaCounter, authorName: authorName }),\n                            react__WEBPACK_IMPORTED_MODULE_16__.createElement(_ReplyCommentButton__WEBPACK_IMPORTED_MODULE_12__.ReplyCommentButton, { className: _comment_css__WEBPACK_IMPORTED_MODULE_18__[\"default\"].button, onOpen: handleToggleComments }),\n                            react__WEBPACK_IMPORTED_MODULE_16__.createElement(_ShareCommentButton__WEBPACK_IMPORTED_MODULE_10__.ShareCommentButton, { className: _comment_css__WEBPACK_IMPORTED_MODULE_18__[\"default\"].button }),\n                            react__WEBPACK_IMPORTED_MODULE_16__.createElement(_MenuCommentButton__WEBPACK_IMPORTED_MODULE_14__.MenuCommentButton, { className: _comment_css__WEBPACK_IMPORTED_MODULE_18__[\"default\"].button })),\n                        (formIsOpen || commentReplies) &&\n                            react__WEBPACK_IMPORTED_MODULE_16__.createElement(\"div\", { className: _comment_css__WEBPACK_IMPORTED_MODULE_18__[\"default\"].commentsBlock },\n                                formIsOpen &&\n                                    react__WEBPACK_IMPORTED_MODULE_16__.createElement(_ModalCommentsForm__WEBPACK_IMPORTED_MODULE_9__.ModalCommentsForm, { className: _comment_css__WEBPACK_IMPORTED_MODULE_18__[\"default\"].formComment, authorName: authorName, commentId: commentId, onClose: setCloseCommentForm, rootId: 'comments_root', cancelBtn: true }),\n                                react__WEBPACK_IMPORTED_MODULE_16__.createElement(_ModalCommentsList__WEBPACK_IMPORTED_MODULE_13__.ModalCommentsList, { commentsData: (0,_utils_ts_commentsArrConverter__WEBPACK_IMPORTED_MODULE_2__.commentsArrConverter)(commentReplies, postId) }),\n                                react__WEBPACK_IMPORTED_MODULE_16__.createElement(_MoreCommentsButton__WEBPACK_IMPORTED_MODULE_7__.MoreCommentsButton, { postId: postId, moreCommentsData: moreCommentsData })))))));\n});\n\n\n//# sourceURL=webpack://new-reddit/./src/shared/CardsList/Card/CardModal/ModalCommentsList/Comment/Comment.tsx?");

/***/ }),

/***/ "./src/shared/CardsList/Card/CardModal/ModalCommentsList/Comment/MenuCommentButton/MenuCommentButton.tsx":
/*!***************************************************************************************************************!*\
  !*** ./src/shared/CardsList/Card/CardModal/ModalCommentsList/Comment/MenuCommentButton/MenuCommentButton.tsx ***!
  \***************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MenuCommentButton: () => (/* binding */ MenuCommentButton)\n/* harmony export */ });\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react-dom */ \"./node_modules/@hot-loader/react-dom/index.js\");\n/* harmony import */ var _menuCommentButton_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./menuCommentButton.css */ \"./src/shared/CardsList/Card/CardModal/ModalCommentsList/Comment/MenuCommentButton/menuCommentButton.css\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var _Icons__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../../../Icons */ \"./src/shared/Icons/index.ts\");\n/* harmony import */ var _MenuCommentDropdown__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./MenuCommentDropdown */ \"./src/shared/CardsList/Card/CardModal/ModalCommentsList/Comment/MenuCommentButton/MenuCommentDropdown/index.ts\");\n/* harmony import */ var _hooks_useCoords__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../../../../hooks/useCoords */ \"./src/hooks/useCoords.ts\");\n\n\n\n\n\n\nfunction MenuCommentButton({ className }) {\n    const commentsRoot = document.getElementById('comments_root');\n    if (!commentsRoot)\n        return null;\n    const [isCommentMenuOpen, setisCommentMenuOpen] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(false);\n    const controlRef = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(null);\n    const [coords] = (0,_hooks_useCoords__WEBPACK_IMPORTED_MODULE_5__.useCoords)(controlRef, isCommentMenuOpen);\n    return (react__WEBPACK_IMPORTED_MODULE_2__.createElement(react__WEBPACK_IMPORTED_MODULE_2__.Fragment, null,\n        react__WEBPACK_IMPORTED_MODULE_2__.createElement(\"button\", { className: `${className ? className + ' ' : ''}${_menuCommentButton_css__WEBPACK_IMPORTED_MODULE_1__[\"default\"].button}`, onClick: () => setisCommentMenuOpen(true), ref: controlRef },\n            react__WEBPACK_IMPORTED_MODULE_2__.createElement(_Icons__WEBPACK_IMPORTED_MODULE_3__.IconMenu, null)),\n        isCommentMenuOpen && coords && (0,react_dom__WEBPACK_IMPORTED_MODULE_0__.createPortal)(react__WEBPACK_IMPORTED_MODULE_2__.createElement(_MenuCommentDropdown__WEBPACK_IMPORTED_MODULE_4__.MenuCommentDropdown, { style: {\n                left: (coords === null || coords === void 0 ? void 0 : coords.left) + 'px',\n                top: (coords === null || coords === void 0 ? void 0 : coords.top) + 'px',\n            }, className: className, onClose: () => setisCommentMenuOpen(false) }), commentsRoot)));\n}\n\n\n//# sourceURL=webpack://new-reddit/./src/shared/CardsList/Card/CardModal/ModalCommentsList/Comment/MenuCommentButton/MenuCommentButton.tsx?");

/***/ }),

/***/ "./src/shared/CardsList/Card/CardModal/ModalCommentsList/Comment/MenuCommentButton/MenuCommentDropdown/MenuCommentDropdown.tsx":
/*!*************************************************************************************************************************************!*\
  !*** ./src/shared/CardsList/Card/CardModal/ModalCommentsList/Comment/MenuCommentButton/MenuCommentDropdown/MenuCommentDropdown.tsx ***!
  \*************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MenuCommentDropdown: () => (/* binding */ MenuCommentDropdown)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var _menuCommentDropdown_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./menuCommentDropdown.css */ \"./src/shared/CardsList/Card/CardModal/ModalCommentsList/Comment/MenuCommentButton/MenuCommentDropdown/menuCommentDropdown.css\");\n/* harmony import */ var _Icons__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../../../Icons */ \"./src/shared/Icons/index.ts\");\n/* harmony import */ var _utils_react_GenericList__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../../../../../utils/react/GenericList */ \"./src/utils/react/GenericList.tsx\");\n/* harmony import */ var _hooks_useModalCloser__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../../../../../hooks/useModalCloser */ \"./src/hooks/useModalCloser.ts\");\n/* harmony import */ var _hooks_useResizeCloser__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../../../../../hooks/useResizeCloser */ \"./src/hooks/useResizeCloser.ts\");\n/* harmony import */ var _utils_ts_generateRandomIndex__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../../../../../utils/ts/generateRandomIndex */ \"./src/utils/ts/generateRandomIndex.ts\");\n\n\n\n\n\n\n\nfunction MenuCommentDropdown({ className, onClose, style }) {\n    const $CommentBtnsDropdown = [\n        { item: react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Icons__WEBPACK_IMPORTED_MODULE_2__.IconReport, null), text: 'Report' },\n        { item: react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Icons__WEBPACK_IMPORTED_MODULE_2__.IconSave, null), text: 'Save' },\n        { item: react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Icons__WEBPACK_IMPORTED_MODULE_2__.IconHide, null), text: 'Hide' },\n    ].map(_utils_ts_generateRandomIndex__WEBPACK_IMPORTED_MODULE_6__.generateId);\n    (0,_hooks_useModalCloser__WEBPACK_IMPORTED_MODULE_4__.useModalCloser)({ onClose });\n    (0,_hooks_useResizeCloser__WEBPACK_IMPORTED_MODULE_5__.useResizeCloser)(onClose);\n    return (react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"ul\", { className: _menuCommentDropdown_css__WEBPACK_IMPORTED_MODULE_1__[\"default\"].list, style: style },\n        react__WEBPACK_IMPORTED_MODULE_0__.createElement(_utils_react_GenericList__WEBPACK_IMPORTED_MODULE_3__.GenericList, { As: 'button', className: `${className ? className + ' ' : ''}${_menuCommentDropdown_css__WEBPACK_IMPORTED_MODULE_1__[\"default\"].item}`, list: $CommentBtnsDropdown })));\n}\n\n\n//# sourceURL=webpack://new-reddit/./src/shared/CardsList/Card/CardModal/ModalCommentsList/Comment/MenuCommentButton/MenuCommentDropdown/MenuCommentDropdown.tsx?");

/***/ }),

/***/ "./src/shared/CardsList/Card/CardModal/ModalCommentsList/Comment/MenuCommentButton/MenuCommentDropdown/index.ts":
/*!**********************************************************************************************************************!*\
  !*** ./src/shared/CardsList/Card/CardModal/ModalCommentsList/Comment/MenuCommentButton/MenuCommentDropdown/index.ts ***!
  \**********************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MenuCommentDropdown: () => (/* reexport safe */ _MenuCommentDropdown__WEBPACK_IMPORTED_MODULE_0__.MenuCommentDropdown)\n/* harmony export */ });\n/* harmony import */ var _MenuCommentDropdown__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./MenuCommentDropdown */ \"./src/shared/CardsList/Card/CardModal/ModalCommentsList/Comment/MenuCommentButton/MenuCommentDropdown/MenuCommentDropdown.tsx\");\n\n\n\n//# sourceURL=webpack://new-reddit/./src/shared/CardsList/Card/CardModal/ModalCommentsList/Comment/MenuCommentButton/MenuCommentDropdown/index.ts?");

/***/ }),

/***/ "./src/shared/CardsList/Card/CardModal/ModalCommentsList/Comment/MenuCommentButton/index.ts":
/*!**************************************************************************************************!*\
  !*** ./src/shared/CardsList/Card/CardModal/ModalCommentsList/Comment/MenuCommentButton/index.ts ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MenuCommentButton: () => (/* reexport safe */ _MenuCommentButton__WEBPACK_IMPORTED_MODULE_0__.MenuCommentButton)\n/* harmony export */ });\n/* harmony import */ var _MenuCommentButton__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./MenuCommentButton */ \"./src/shared/CardsList/Card/CardModal/ModalCommentsList/Comment/MenuCommentButton/MenuCommentButton.tsx\");\n\n\n\n//# sourceURL=webpack://new-reddit/./src/shared/CardsList/Card/CardModal/ModalCommentsList/Comment/MenuCommentButton/index.ts?");

/***/ }),

/***/ "./src/shared/CardsList/Card/CardModal/ModalCommentsList/Comment/ReplyCommentButton/ReplyCommentButton.tsx":
/*!*****************************************************************************************************************!*\
  !*** ./src/shared/CardsList/Card/CardModal/ModalCommentsList/Comment/ReplyCommentButton/ReplyCommentButton.tsx ***!
  \*****************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ReplyCommentButton: () => (/* binding */ ReplyCommentButton)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var _Icons__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../../Icons */ \"./src/shared/Icons/index.ts\");\n\n\nfunction ReplyCommentButton({ className, onOpen }) {\n    return (react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"button\", { className: className, onClick: onOpen },\n        react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Icons__WEBPACK_IMPORTED_MODULE_1__.IconComments, null),\n        \"Reply\"));\n}\n\n\n//# sourceURL=webpack://new-reddit/./src/shared/CardsList/Card/CardModal/ModalCommentsList/Comment/ReplyCommentButton/ReplyCommentButton.tsx?");

/***/ }),

/***/ "./src/shared/CardsList/Card/CardModal/ModalCommentsList/Comment/ReplyCommentButton/index.ts":
/*!***************************************************************************************************!*\
  !*** ./src/shared/CardsList/Card/CardModal/ModalCommentsList/Comment/ReplyCommentButton/index.ts ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ReplyCommentButton: () => (/* reexport safe */ _ReplyCommentButton__WEBPACK_IMPORTED_MODULE_0__.ReplyCommentButton)\n/* harmony export */ });\n/* harmony import */ var _ReplyCommentButton__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ReplyCommentButton */ \"./src/shared/CardsList/Card/CardModal/ModalCommentsList/Comment/ReplyCommentButton/ReplyCommentButton.tsx\");\n\n\n\n//# sourceURL=webpack://new-reddit/./src/shared/CardsList/Card/CardModal/ModalCommentsList/Comment/ReplyCommentButton/index.ts?");

/***/ }),

/***/ "./src/shared/CardsList/Card/CardModal/ModalCommentsList/Comment/ShareCommentButton/ShareCommentButton.tsx":
/*!*****************************************************************************************************************!*\
  !*** ./src/shared/CardsList/Card/CardModal/ModalCommentsList/Comment/ShareCommentButton/ShareCommentButton.tsx ***!
  \*****************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ShareCommentButton: () => (/* binding */ ShareCommentButton)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var _Icons__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../../Icons */ \"./src/shared/Icons/index.ts\");\n\n\nfunction ShareCommentButton({ className }) {\n    return (react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"button\", { className: className },\n        react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Icons__WEBPACK_IMPORTED_MODULE_1__.IconShare, null),\n        \"Share\"));\n}\n\n\n//# sourceURL=webpack://new-reddit/./src/shared/CardsList/Card/CardModal/ModalCommentsList/Comment/ShareCommentButton/ShareCommentButton.tsx?");

/***/ }),

/***/ "./src/shared/CardsList/Card/CardModal/ModalCommentsList/Comment/ShareCommentButton/index.ts":
/*!***************************************************************************************************!*\
  !*** ./src/shared/CardsList/Card/CardModal/ModalCommentsList/Comment/ShareCommentButton/index.ts ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ShareCommentButton: () => (/* reexport safe */ _ShareCommentButton__WEBPACK_IMPORTED_MODULE_0__.ShareCommentButton)\n/* harmony export */ });\n/* harmony import */ var _ShareCommentButton__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ShareCommentButton */ \"./src/shared/CardsList/Card/CardModal/ModalCommentsList/Comment/ShareCommentButton/ShareCommentButton.tsx\");\n\n\n\n//# sourceURL=webpack://new-reddit/./src/shared/CardsList/Card/CardModal/ModalCommentsList/Comment/ShareCommentButton/index.ts?");

/***/ }),

/***/ "./src/shared/CardsList/Card/CardModal/ModalCommentsList/Comment/index.ts":
/*!********************************************************************************!*\
  !*** ./src/shared/CardsList/Card/CardModal/ModalCommentsList/Comment/index.ts ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Comment: () => (/* reexport safe */ _Comment__WEBPACK_IMPORTED_MODULE_0__.Comment)\n/* harmony export */ });\n/* harmony import */ var _Comment__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Comment */ \"./src/shared/CardsList/Card/CardModal/ModalCommentsList/Comment/Comment.tsx\");\n\n\n\n//# sourceURL=webpack://new-reddit/./src/shared/CardsList/Card/CardModal/ModalCommentsList/Comment/index.ts?");

/***/ }),

/***/ "./src/shared/CardsList/Card/CardModal/ModalCommentsList/ModalCommentsList.tsx":
/*!*************************************************************************************!*\
  !*** ./src/shared/CardsList/Card/CardModal/ModalCommentsList/ModalCommentsList.tsx ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ModalCommentsList: () => (/* binding */ ModalCommentsList)\n/* harmony export */ });\n/* harmony import */ var _Loader_RedditLoader__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../Loader/RedditLoader */ \"./src/Loader/RedditLoader/index.ts\");\n/* harmony import */ var _modalcommentsList_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./modalcommentsList.css */ \"./src/shared/CardsList/Card/CardModal/ModalCommentsList/modalcommentsList.css\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var _Comment__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Comment */ \"./src/shared/CardsList/Card/CardModal/ModalCommentsList/Comment/index.ts\");\n\n\n\n\nconst ModalCommentsList = (0,react__WEBPACK_IMPORTED_MODULE_2__.forwardRef)(({ loading, commentsData }, ref) => {\n    if (!commentsData)\n        return null;\n    return (react__WEBPACK_IMPORTED_MODULE_2__.createElement(\"ul\", { className: _modalcommentsList_css__WEBPACK_IMPORTED_MODULE_1__[\"default\"].list, ref: ref }, loading\n        ? react__WEBPACK_IMPORTED_MODULE_2__.createElement(_Loader_RedditLoader__WEBPACK_IMPORTED_MODULE_0__.RedditLoader, { className: _modalcommentsList_css__WEBPACK_IMPORTED_MODULE_1__[\"default\"].loader })\n        : commentsData\n            .filter((cardItemData) => cardItemData.authorName)\n            .map((cardItemData) => (react__WEBPACK_IMPORTED_MODULE_2__.createElement(_Comment__WEBPACK_IMPORTED_MODULE_3__.Comment, { commentItemData: cardItemData, key: cardItemData.commentId })))));\n});\n\n\n//# sourceURL=webpack://new-reddit/./src/shared/CardsList/Card/CardModal/ModalCommentsList/ModalCommentsList.tsx?");

/***/ }),

/***/ "./src/shared/CardsList/Card/CardModal/ModalCommentsList/index.ts":
/*!************************************************************************!*\
  !*** ./src/shared/CardsList/Card/CardModal/ModalCommentsList/index.ts ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ModalCommentsList: () => (/* reexport safe */ _ModalCommentsList__WEBPACK_IMPORTED_MODULE_0__.ModalCommentsList)\n/* harmony export */ });\n/* harmony import */ var _ModalCommentsList__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ModalCommentsList */ \"./src/shared/CardsList/Card/CardModal/ModalCommentsList/ModalCommentsList.tsx\");\n\n\n\n//# sourceURL=webpack://new-reddit/./src/shared/CardsList/Card/CardModal/ModalCommentsList/index.ts?");

/***/ }),

/***/ "./src/shared/CardsList/Card/CardModal/ModalControlPanel/ModalControlPanel.tsx":
/*!*************************************************************************************!*\
  !*** ./src/shared/CardsList/Card/CardModal/ModalControlPanel/ModalControlPanel.tsx ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ModalControlPanel: () => (/* binding */ ModalControlPanel)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var _modalControlPanel_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./modalControlPanel.css */ \"./src/shared/CardsList/Card/CardModal/ModalControlPanel/modalControlPanel.css\");\n/* harmony import */ var _utils_react_Text__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../utils/react/Text */ \"./src/utils/react/Text.tsx\");\n/* harmony import */ var _utils_react_GenericList__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../../utils/react/GenericList */ \"./src/utils/react/GenericList.tsx\");\n/* harmony import */ var _utils_ts_generateRandomIndex__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../../utils/ts/generateRandomIndex */ \"./src/utils/ts/generateRandomIndex.ts\");\n/* harmony import */ var _utils_ts_shortFormatNumber__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../../utils/ts/shortFormatNumber */ \"./src/utils/ts/shortFormatNumber.ts\");\n/* harmony import */ var _Icons__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../Icons */ \"./src/shared/Icons/index.ts\");\n\n\n\n\n\n\n\nfunction ModalControlPanel({ props }) {\n    const $ControlPanelList = [\n        {\n            text: `${(0,_utils_ts_shortFormatNumber__WEBPACK_IMPORTED_MODULE_5__.shortFormatNumber)(props) || ''} Comments`,\n            item: react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Icons__WEBPACK_IMPORTED_MODULE_6__.IconComments, null),\n            disabled: true\n        },\n        {\n            text: 'Share',\n            item: react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Icons__WEBPACK_IMPORTED_MODULE_6__.IconShare, null),\n        },\n        {\n            text: 'Hide',\n            item: react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Icons__WEBPACK_IMPORTED_MODULE_6__.IconHide, null),\n        },\n        {\n            text: 'Save',\n            item: react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Icons__WEBPACK_IMPORTED_MODULE_6__.IconSave, null),\n        },\n        {\n            text: 'Report',\n            item: react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Icons__WEBPACK_IMPORTED_MODULE_6__.IconReport, null),\n        }\n    ].map(_utils_ts_generateRandomIndex__WEBPACK_IMPORTED_MODULE_4__.generateId);\n    return (react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", { className: _modalControlPanel_css__WEBPACK_IMPORTED_MODULE_1__[\"default\"].panel },\n        react__WEBPACK_IMPORTED_MODULE_0__.createElement(_utils_react_GenericList__WEBPACK_IMPORTED_MODULE_3__.GenericList, { list: $ControlPanelList, As: 'button', className: _modalControlPanel_css__WEBPACK_IMPORTED_MODULE_1__[\"default\"].item, size: 14, mobileSize: 12, color: _utils_react_Text__WEBPACK_IMPORTED_MODULE_2__.EColor.grayC4 })));\n}\n\n\n//# sourceURL=webpack://new-reddit/./src/shared/CardsList/Card/CardModal/ModalControlPanel/ModalControlPanel.tsx?");

/***/ }),

/***/ "./src/shared/CardsList/Card/CardModal/ModalControlPanel/index.ts":
/*!************************************************************************!*\
  !*** ./src/shared/CardsList/Card/CardModal/ModalControlPanel/index.ts ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ModalControlPanel: () => (/* reexport safe */ _ModalControlPanel__WEBPACK_IMPORTED_MODULE_0__.ModalControlPanel)\n/* harmony export */ });\n/* harmony import */ var _ModalControlPanel__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ModalControlPanel */ \"./src/shared/CardsList/Card/CardModal/ModalControlPanel/ModalControlPanel.tsx\");\n\n\n\n//# sourceURL=webpack://new-reddit/./src/shared/CardsList/Card/CardModal/ModalControlPanel/index.ts?");

/***/ }),

/***/ "./src/shared/CardsList/Card/CardModal/ModalSortBlock/ModalSortBlock.tsx":
/*!*******************************************************************************!*\
  !*** ./src/shared/CardsList/Card/CardModal/ModalSortBlock/ModalSortBlock.tsx ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ModalSortBlock: () => (/* binding */ ModalSortBlock)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var _modalSortBlock_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./modalSortBlock.css */ \"./src/shared/CardsList/Card/CardModal/ModalSortBlock/modalSortBlock.css\");\n/* harmony import */ var _utils_react_Text__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../utils/react/Text */ \"./src/utils/react/Text.tsx\");\n/* harmony import */ var _Icons__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../Icons */ \"./src/shared/Icons/index.ts\");\n\n\n\n\nfunction ModalSortBlock() {\n    return (react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", { className: _modalSortBlock_css__WEBPACK_IMPORTED_MODULE_1__[\"default\"].sortblock },\n        react__WEBPACK_IMPORTED_MODULE_0__.createElement(_utils_react_Text__WEBPACK_IMPORTED_MODULE_2__.Text, { size: 14, mobileSize: 12, color: _utils_react_Text__WEBPACK_IMPORTED_MODULE_2__.EColor.blew }, 'Sort by: '),\n        react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"button\", { className: _modalSortBlock_css__WEBPACK_IMPORTED_MODULE_1__[\"default\"].button },\n            'Best ',\n            react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Icons__WEBPACK_IMPORTED_MODULE_3__.IconArrow, null))));\n}\n\n\n//# sourceURL=webpack://new-reddit/./src/shared/CardsList/Card/CardModal/ModalSortBlock/ModalSortBlock.tsx?");

/***/ }),

/***/ "./src/shared/CardsList/Card/CardModal/ModalSortBlock/index.ts":
/*!*********************************************************************!*\
  !*** ./src/shared/CardsList/Card/CardModal/ModalSortBlock/index.ts ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ModalSortBlock: () => (/* reexport safe */ _ModalSortBlock__WEBPACK_IMPORTED_MODULE_0__.ModalSortBlock)\n/* harmony export */ });\n/* harmony import */ var _ModalSortBlock__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ModalSortBlock */ \"./src/shared/CardsList/Card/CardModal/ModalSortBlock/ModalSortBlock.tsx\");\n\n\n\n//# sourceURL=webpack://new-reddit/./src/shared/CardsList/Card/CardModal/ModalSortBlock/index.ts?");

/***/ }),

/***/ "./src/shared/CardsList/Card/CardModal/MoreCommentsButton/MoreCommentsButton.tsx":
/*!***************************************************************************************!*\
  !*** ./src/shared/CardsList/Card/CardModal/MoreCommentsButton/MoreCommentsButton.tsx ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MoreCommentsButton: () => (/* binding */ MoreCommentsButton)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var _moreCommentsButton_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./moreCommentsButton.css */ \"./src/shared/CardsList/Card/CardModal/MoreCommentsButton/moreCommentsButton.css\");\n/* harmony import */ var _ModalCommentsList__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../ModalCommentsList */ \"./src/shared/CardsList/Card/CardModal/ModalCommentsList/index.ts\");\n/* harmony import */ var _hooks_useMoreComments__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../../hooks/useMoreComments */ \"./src/hooks/useMoreComments.ts\");\n\n\n\n\nfunction MoreCommentsButton({ postId, moreCommentsData }) {\n    const [isRepliesOpen, setIsRepliesOpen] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const [moreComments] = (0,_hooks_useMoreComments__WEBPACK_IMPORTED_MODULE_3__.useMoreComments)({\n        commentsData: moreCommentsData,\n        postId: postId,\n    });\n    return (react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null,\n        !isRepliesOpen &&\n            moreComments &&\n            moreComments.length > 0 &&\n            react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"button\", { className: _moreCommentsButton_css__WEBPACK_IMPORTED_MODULE_1__[\"default\"].button, onClick: () => setTimeout(() => {\n                    setIsRepliesOpen(true);\n                }, 20) }, moreComments === null || moreComments === void 0 ? void 0 :\n                moreComments.length,\n                (moreComments === null || moreComments === void 0 ? void 0 : moreComments.length) !== 1\n                    ? ' more replies'\n                    : ' more reply'),\n        isRepliesOpen &&\n            react__WEBPACK_IMPORTED_MODULE_0__.createElement(_ModalCommentsList__WEBPACK_IMPORTED_MODULE_2__.ModalCommentsList, { commentsData: moreComments })));\n}\n\n\n//# sourceURL=webpack://new-reddit/./src/shared/CardsList/Card/CardModal/MoreCommentsButton/MoreCommentsButton.tsx?");

/***/ }),

/***/ "./src/shared/CardsList/Card/CardModal/MoreCommentsButton/index.ts":
/*!*************************************************************************!*\
  !*** ./src/shared/CardsList/Card/CardModal/MoreCommentsButton/index.ts ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MoreCommentsButton: () => (/* reexport safe */ _MoreCommentsButton__WEBPACK_IMPORTED_MODULE_0__.MoreCommentsButton)\n/* harmony export */ });\n/* harmony import */ var _MoreCommentsButton__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./MoreCommentsButton */ \"./src/shared/CardsList/Card/CardModal/MoreCommentsButton/MoreCommentsButton.tsx\");\n\n\n\n//# sourceURL=webpack://new-reddit/./src/shared/CardsList/Card/CardModal/MoreCommentsButton/index.ts?");

/***/ }),

/***/ "./src/shared/CardsList/Card/CardModal/index.ts":
/*!******************************************************!*\
  !*** ./src/shared/CardsList/Card/CardModal/index.ts ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CardModal: () => (/* reexport safe */ _CardModal__WEBPACK_IMPORTED_MODULE_0__.CardModal)\n/* harmony export */ });\n/* harmony import */ var _CardModal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./CardModal */ \"./src/shared/CardsList/Card/CardModal/CardModal.tsx\");\n\n\n\n//# sourceURL=webpack://new-reddit/./src/shared/CardsList/Card/CardModal/index.ts?");

/***/ }),

/***/ "./src/shared/CardsList/Card/CardVisual/index.ts":
/*!*******************************************************!*\
  !*** ./src/shared/CardsList/Card/CardVisual/index.ts ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CardVisual: () => (/* reexport safe */ _CardVisual__WEBPACK_IMPORTED_MODULE_0__.CardVisual)\n/* harmony export */ });\n/* harmony import */ var _CardVisual__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./CardVisual */ \"./src/shared/CardsList/Card/CardVisual/CardVisual.tsx\");\n\n\n\n//# sourceURL=webpack://new-reddit/./src/shared/CardsList/Card/CardVisual/index.ts?");

/***/ }),

/***/ "./src/storeRedux/comments/commentsAsyncThunk.ts":
/*!*******************************************************!*\
  !*** ./src/storeRedux/comments/commentsAsyncThunk.ts ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   commentsAsyncThunk: () => (/* binding */ commentsAsyncThunk)\n/* harmony export */ });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! axios */ \"./node_modules/axios/lib/axios.js\");\n/* harmony import */ var _modal_modalSlice__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../modal/modalSlice */ \"./src/storeRedux/modal/modalSlice.ts\");\n/* harmony import */ var _utils_ts_postConverter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/ts/postConverter */ \"./src/utils/ts/postConverter.ts\");\n/* harmony import */ var _utils_ts_commentsArrConverter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/ts/commentsArrConverter */ \"./src/utils/ts/commentsArrConverter.ts\");\n/* harmony import */ var _commentsSlice__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./commentsSlice */ \"./src/storeRedux/comments/commentsSlice.ts\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n\n\n\nconst commentsAsyncThunk = (postSubreddit, postId) => (dispatch, getState) => __awaiter(void 0, void 0, void 0, function* () {\n    dispatch((0,_commentsSlice__WEBPACK_IMPORTED_MODULE_3__.commentsDataPending)());\n    const { postsData } = getState().postsBlock;\n    const post = postsData.filter(post => post.postId === postId)[0];\n    post && dispatch((0,_modal_modalSlice__WEBPACK_IMPORTED_MODULE_0__.setModalData)(post));\n    try {\n        const { data } = yield axios__WEBPACK_IMPORTED_MODULE_4__[\"default\"].get(`https://api.reddit.com/r/${postSubreddit}/comments/${postId}`);\n        !post && dispatch((0,_modal_modalSlice__WEBPACK_IMPORTED_MODULE_0__.setModalData)((0,_utils_ts_postConverter__WEBPACK_IMPORTED_MODULE_1__.postConverter)(data[0].data.children[0].data)));\n        dispatch((0,_commentsSlice__WEBPACK_IMPORTED_MODULE_3__.setCommentsData)((0,_utils_ts_commentsArrConverter__WEBPACK_IMPORTED_MODULE_2__.commentsArrConverter)(data[1].data.children, postId)));\n    }\n    catch (error) {\n        console.log(error);\n        dispatch((0,_commentsSlice__WEBPACK_IMPORTED_MODULE_3__.commentsDataError)(error));\n    }\n});\n\n\n//# sourceURL=webpack://new-reddit/./src/storeRedux/comments/commentsAsyncThunk.ts?");

/***/ }),

/***/ "./src/utils/ts/commentsArrConverter.ts":
/*!**********************************************!*\
  !*** ./src/utils/ts/commentsArrConverter.ts ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   commentsArrConverter: () => (/* binding */ commentsArrConverter)\n/* harmony export */ });\nfunction commentsArrConverter(arr, postId) {\n    if (!arr)\n        return;\n    return arr.map((item) => {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n        const comment = item.data;\n        const moreCommentsData = (_g = (_f = (_e = (_d = (_c = (_b = (_a = comment === null || comment === void 0 ? void 0 : comment.replies) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.children) === null || _c === void 0 ? void 0 : _c.filter((item) => item.kind === 'more')[0]) === null || _d === void 0 ? void 0 : _d.data) === null || _e === void 0 ? void 0 : _e.children) === null || _f === void 0 ? void 0 : _f.join(',')) === null || _g === void 0 ? void 0 : _g.substring(0, 799);\n        return {\n            postId: postId,\n            commentId: comment.id,\n            authorName: comment.author,\n            createdTime: comment.created,\n            commentText: comment.body,\n            commentHtml: comment.body_html,\n            karmaCounter: comment.score,\n            commentReplies: (_j = (_h = comment.replies) === null || _h === void 0 ? void 0 : _h.data) === null || _j === void 0 ? void 0 : _j.children,\n            children: comment.children,\n            moreCommentsData: moreCommentsData\n        };\n    });\n}\n\n\n//# sourceURL=webpack://new-reddit/./src/utils/ts/commentsArrConverter.ts?");

/***/ }),

/***/ "./src/utils/ts/convertRedditTextHtml.ts":
/*!***********************************************!*\
  !*** ./src/utils/ts/convertRedditTextHtml.ts ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   convertRedditTextHtml: () => (/* binding */ convertRedditTextHtml)\n/* harmony export */ });\nfunction convertRedditTextHtml(str) {\n    str = str.replace(/&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;/g, '')\n        .replace(\"&lt;/div&gt;&lt;!-- SC_ON --&gt;\", '')\n        .replace(/&gt;/g, \">\")\n        .replace(/&lt;/g, \"<\")\n        .replace(/&amp;#39;/g, \"'\")\n        .replace(/&amp;quot;/g, '\"')\n        .replace(/&amp;/g, '&');\n    return str;\n}\n\n\n//# sourceURL=webpack://new-reddit/./src/utils/ts/convertRedditTextHtml.ts?");

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ /* webpack/runtime/getFullHash */
/******/ (() => {
/******/ 	__webpack_require__.h = () => ("be3eee6f7d13b8b86e43")
/******/ })();
/******/ 
/******/ }
);